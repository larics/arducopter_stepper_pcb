<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [arducopter_stepper_pcb_firmware\arducopter_stepper_pcb_firmware.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image arducopter_stepper_pcb_firmware\arducopter_stepper_pcb_firmware.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Fri Feb 09 15:05:46 2018
<BR><P>
<H3>Maximum Stack Usage =       1472 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[123]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[14]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">BusFault_Handler</a><BR>
 <LI><a href="#[12]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">HardFault_Handler</a><BR>
 <LI><a href="#[13]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">MemManage_Handler</a><BR>
 <LI><a href="#[15]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">UsageFault_Handler</a><BR>
 <LI><a href="#[82]">StartDefaultTask(const void*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[82]">StartDefaultTask(const void*)</a><BR>
 <LI><a href="#[161]">_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[161]">_Error_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2c]">ADC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[14]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2e]">CAN1_RX0_IRQHandler</a> from uc_stm32_can.o(i.CAN1_RX0_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2f]">CAN1_RX1_IRQHandler</a> from uc_stm32_can.o(i.CAN1_RX1_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[30]">CAN1_SCE_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2d]">CAN1_TX_IRQHandler</a> from uc_stm32_can.o(i.CAN1_TX_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[58]">CAN2_RX0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[59]">CAN2_RX1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5a]">CAN2_SCE_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[57]">CAN2_TX_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[25]">DMA1_Stream0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[26]">DMA1_Stream1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[27]">DMA1_Stream2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[28]">DMA1_Stream3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[29]">DMA1_Stream4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[49]">DMA1_Stream7_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[53]">DMA2_Stream1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5d]">DMA2_Stream6_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5e]">DMA2_Stream7_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[17]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[20]">EXTI0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[42]">EXTI15_10_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[21]">EXTI1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[22]">EXTI2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[23]">EXTI3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[24]">EXTI4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[31]">EXTI9_5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1e]">FLASH_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4a]">FMC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[67]">FPU_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[66]">HASH_RNG_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[12]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3a]">I2C1_ER_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[39]">I2C1_EV_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3c]">I2C2_ER_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3b]">I2C2_EV_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[61]">I2C3_ER_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[60]">I2C3_EV_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[13]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[11]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5b]">OTG_FS_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[44]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[63]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[62]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[65]">OTG_HS_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[64]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1b]">PVD_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[18]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1f]">RCC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[43]">RTC_Alarm_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1d]">RTC_WKUP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[10]">Reset_Handler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4b]">SDIO_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3d]">SPI1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3e]">SPI2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4d]">SPI3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[16]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[19]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[68]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f405xx.o(.text)
 <LI><a href="#[1c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[32]">TIM1_BRK_TIM9_IRQHandler</a> from stm32f4xx_it.o(i.TIM1_BRK_TIM9_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[35]">TIM1_CC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[34]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[33]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[36]">TIM2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[37]">TIM3_IRQHandler</a> from uc_stm32_clock.o(i.TIM3_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[38]">TIM4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4c]">TIM5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[50]">TIM6_DAC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[51]">TIM7_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[45]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[48]">TIM8_CC_IRQHandler</a> from stm32f4xx_it.o(i.TIM8_CC_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[47]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[46]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4e]">UART4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4f]">UART5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3f]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[40]">USART2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[41]">USART3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5f]">USART6_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[15]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1a]">WWDG_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[84]">uavcanTask(const void*)</a> from freertos.o(i._Z10uavcanTaskPKv) referenced from freertos.o(.constdata)
 <LI><a href="#[83]">mmControlTask(const void*)</a> from freertos.o(i._Z13mmControlTaskPKv) referenced 4 times from freertos.o(.constdata)
 <LI><a href="#[6b]">vDecodeMsgTask(void*)</a> from freertos.o(i._Z14vDecodeMsgTaskPv) referenced from freertos.o(i._Z16MX_FREERTOS_Initv)
 <LI><a href="#[82]">StartDefaultTask(const void*)</a> from freertos.o(i._Z16StartDefaultTaskPKv) referenced from freertos.o(.constdata)
 <LI><a href="#[9e]">uavcan_stm32::SystemClock::adjustUtc(uavcan::UtcDuration)</a> from uc_stm32_clock.o(i._ZN12uavcan_stm3211SystemClock9adjustUtcEN6uavcan11UtcDurationE) referenced from uc_stm32_clock.o(.constdata__ZTVN12uavcan_stm3211SystemClockE)
 <LI><a href="#[6a]">uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::~CanInitHelper()</a> from scu_libuavcanstm32.o(i._ZN12uavcan_stm3213CanInitHelperILj128EED1Ev) referenced from scu_libuavcanstm32.o(i._Z12getCanDriverv)
 <LI><a href="#[74]">uavcan_stm32::clock::UtcSyncParams::~UtcSyncParams()</a> from uc_stm32_clock.o(i._ZN12uavcan_stm325clock13UtcSyncParamsD1Ev) referenced from uc_stm32_clock.o(i.__sti___18_uc_stm32_clock_cpp_87095aac)
 <LI><a href="#[9f]">uavcan_stm32::CanIface::send(const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)</a> from uc_stm32_can.o(i._ZN12uavcan_stm328CanIface4sendERKN6uavcan8CanFrameENS1_13MonotonicTimeEt) referenced from uc_stm32_can.o(.constdata__ZTVN12uavcan_stm328CanIfaceE)
 <LI><a href="#[7b]">uavcan_stm32::CanIface::TxItem::TxItem()</a> from scu_libuavcanstm32.o(i._ZN12uavcan_stm328CanIface6TxItemC1Ev) referenced from scu_libuavcanstm32.o(t._ZN12uavcan_stm3213CanInitHelperILj128EEC1Ev)
 <LI><a href="#[6c]">uavcan_stm32::CanIface::TxItem::~TxItem()</a> from scu_libuavcanstm32.o(i._ZN12uavcan_stm328CanIface6TxItemD1Ev) referenced from scu_libuavcanstm32.o(i._ZN12uavcan_stm3213CanInitHelperILj128EED1Ev)
 <LI><a href="#[a0]">uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&)</a> from uc_stm32_can.o(i._ZN12uavcan_stm328CanIface7receiveERN6uavcan8CanFrameERNS1_13MonotonicTimeERNS1_7UtcTimeERt) referenced from uc_stm32_can.o(.constdata__ZTVN12uavcan_stm328CanIfaceE)
 <LI><a href="#[a4]">uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)</a> from uc_stm32_can.o(i._ZN12uavcan_stm329CanDriver6selectERN6uavcan14CanSelectMasksERA3_PKNS1_8CanFrameENS1_13MonotonicTimeE) referenced from uc_stm32_can.o(.constdata__ZTVN12uavcan_stm329CanDriverE)
 <LI><a href="#[a2]">uavcan_stm32::CanDriver::getIface(unsigned char)</a> from uc_stm32_can.o(i._ZN12uavcan_stm329CanDriver8getIfaceEh) referenced from uc_stm32_can.o(.constdata__ZTVN12uavcan_stm329CanDriverE)
 <LI><a href="#[7a]">uavcan_stm32::CanRxItem::CanRxItem()</a> from scu_libuavcanstm32.o(i._ZN12uavcan_stm329CanRxItemC1Ev) referenced from scu_libuavcanstm32.o(t._ZN12uavcan_stm3213CanInitHelperILj128EEC1Ev)
 <LI><a href="#[88]">scu_libuavcan::motor_ref_callback(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)</a> from scu_libuavcan.o(i._ZN13scu_libuavcan18motor_ref_callbackERKN6uavcan9equipment8actuator13ArrayCommand_ILi0EEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[77]">scu_libuavcan::~scu_libuavcan()</a> from main.o(i._ZN13scu_libuavcanD1Ev) referenced from main.o(i.__sti___8_main_cpp_scu_can1)
 <LI><a href="#[9a]">ScuParamManager::saveAllParams()</a> from scuparammanager.o(i._ZN15ScuParamManager13saveAllParamsEv) referenced from scuparammanager.o(.constdata__ZTV15ScuParamManager)
 <LI><a href="#[9b]">ScuParamManager::eraseAllParams()</a> from scuparammanager.o(i._ZN15ScuParamManager14eraseAllParamsEv) referenced from scuparammanager.o(.constdata__ZTV15ScuParamManager)
 <LI><a href="#[97]">ScuParamManager::assignParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, const uavcan::protocol::param::Value_&lang;(int)0&rang;&)</a> from scuparammanager.o(i._ZN15ScuParamManager16assignParamValueERKN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEERKNS0_8protocol5param6Value_ILi0EEE) referenced from scuparammanager.o(.constdata__ZTV15ScuParamManager)
 <LI><a href="#[9c]">ScuRestartRequestHandler::handleRestartRequest(uavcan::NodeID)</a> from scurestartrequesthandler.o(i._ZN24ScuRestartRequestHandler20handleRestartRequestEN6uavcan6NodeIDE) referenced from scurestartrequesthandler.o(.constdata__ZTV24ScuRestartRequestHandler)
 <LI><a href="#[8d]">uavcan::Dispatcher::registerMessageListener(uavcan::TransferListener*)</a> from uc_dispatcher.o(i._ZN6uavcan10Dispatcher23registerMessageListenerEPNS_16TransferListenerE) referenced 2 times from scu_libuavcan.o(.constdata)
 <LI><a href="#[8c]">uavcan::Dispatcher::registerServiceRequestListener(uavcan::TransferListener*)</a> from uc_dispatcher.o(i._ZN6uavcan10Dispatcher30registerServiceRequestListenerEPNS_16TransferListenerE) referenced 6 times from scu_libuavcan.o(.constdata)
 <LI><a href="#[a5]">uavcan::Subscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan10SubscriberINS_8protocol15GlobalTimeSync_ILi0EEENS_12MethodBinderIPNS_19GlobalTimeSyncSlaveEMS5_FvRKNS_21ReceivedDataStructureIS3_EEEEEE24handleReceivedDataStructERS8_) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan10SubscriberINS_8protocol15GlobalTimeSync_ILi0EEENS_12MethodBinderIPNS_19GlobalTimeSyncSlaveEMS5_FvRKNS_21ReceivedDataStructureIS3_EEEEEEE)
 <LI><a href="#[a6]">uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS4_EE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEEE)
 <LI><a href="#[6e]">uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::~Subscriber()</a> from scu_libuavcan.o(i._ZN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEEE)
 <LI><a href="#[6e]">uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::~Subscriber()</a> from scu_libuavcan.o(i._ZN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEED1Ev) referenced from scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
 <LI><a href="#[86]">uavcan::ParamServer::handleGetSet(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)</a> from scu_libuavcan.o(i._ZN6uavcan11ParamServer12handleGetSetERKNS_8protocol5param7GetSet_8Request_ILi0EEERNS3_9Response_ILi0EEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[87]">uavcan::ParamServer::handleExecuteOpcode(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)</a> from scu_libuavcan.o(i._ZN6uavcan11ParamServer19handleExecuteOpcodeERKNS_8protocol5param14ExecuteOpcode_8Request_ILi0EEERNS3_9Response_ILi0EEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[6f]">uavcan::ParamServer::~ParamServer()</a> from scu_libuavcan.o(i._ZN6uavcan11ParamServerD1Ev) referenced from scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
 <LI><a href="#[72]">uavcan::CanIOManager::IfaceFrameCounters::IfaceFrameCounters()</a> from uc_can_io.o(i._ZN6uavcan12CanIOManager18IfaceFrameCountersC1Ev) referenced from uc_can_io.o(i._ZN6uavcan12CanIOManagerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockEj)
 <LI><a href="#[75]">uavcan::MonotonicTime::~MonotonicTime()</a> from uc_stm32_clock.o(i._ZN6uavcan13MonotonicTimeD1Ev) referenced from uc_stm32_clock.o(i.__sti___18_uc_stm32_clock_cpp_87095aac)
 <LI><a href="#[a8]">uavcan::PoolAllocator&lang;(unsigned)25600, (unsigned char)64, char&rang;::deallocate(const void*)</a> from scu_libuavcan.o(t._ZN6uavcan13PoolAllocatorILj25600ELh64EcE10deallocateEPKv) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13PoolAllocatorILj25600ELh64EcEE)
 <LI><a href="#[a7]">uavcan::PoolAllocator&lang;(unsigned)25600, (unsigned char)64, char&rang;::allocate(unsigned)</a> from scu_libuavcan.o(t._ZN6uavcan13PoolAllocatorILj25600ELh64EcE8allocateEj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13PoolAllocatorILj25600ELh64EcEE)
 <LI><a href="#[ab]">uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)</a> from uc_node_status_provider.o(t._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS7_EE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[aa]">uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</a> from scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[ad]">uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERSA_) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[ac]">uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()</a> from scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[af]">uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS7_EE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[ae]">uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</a> from scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b1]">uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b0]">uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()</a> from scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b3]">uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b2]">uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</a> from scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b5]">uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b4]">uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</a> from scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
 <LI><a href="#[b6]">uavcan::DeadlineHandler::~DeadlineHandler__sub_object()</a> from scu_libuavcan.o(i._ZN6uavcan15DeadlineHandlerD2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan15DeadlineHandlerE)
 <LI><a href="#[71]">uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::LazyConstructor()</a> from uc_can_io.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEEC1Ev) referenced from uc_can_io.o(i._ZN6uavcan12CanIOManagerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockEj)
 <LI><a href="#[73]">uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::~LazyConstructor()</a> from scu_libuavcan.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEED1Ev) referenced from scu_libuavcan.o(i._ZN6uavcan4NodeILj25600EED1Ev)
 <LI><a href="#[b9]">uavcan::IncomingTransfer::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer5writeEjPKhj) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
 <LI><a href="#[b9]">uavcan::IncomingTransfer::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer5writeEjPKhj) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
 <LI><a href="#[b9]">uavcan::IncomingTransfer::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer5writeEjPKhj) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
 <LI><a href="#[ba]">uavcan::IncomingTransfer::release()</a> from uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer7releaseEv) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
 <LI><a href="#[ba]">uavcan::IncomingTransfer::release()</a> from uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer7releaseEv) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
 <LI><a href="#[b8]">uavcan::IncomingTransfer::~IncomingTransfer__sub_object()</a> from uc_transfer_listener.o(i._ZN6uavcan16IncomingTransferD2Ev) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16TransferListenerE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from uc_node_status_provider.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bd]">uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bc]">uavcan::TransferListener::~TransferListener__sub_object()</a> from uc_transfer_listener.o(i._ZN6uavcan16TransferListenerD2Ev) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16TransferListenerE)
 <LI><a href="#[be]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from uc_node_status_provider.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from uc_node_status_provider.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[bf]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from uc_node_status_provider.o(i._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev) referenced from uc_node_status_provider.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c0]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[c1]">uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c2]">uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c3]">uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[c4]">uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c5]">uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c6]">uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEEE)
 <LI><a href="#[c7]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c8]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[c9]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[ca]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[cb]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[cc]">uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[cd]">uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[ce]">uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[cf]">uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[d0]">uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[d1]">uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[d2]">uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[d3]">uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[d4]">uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</a> from scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderD1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderE)
 <LI><a href="#[d5]">uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</a> from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEED2Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEEE)
 <LI><a href="#[76]">uavcan::MonotonicDuration::~MonotonicDuration()</a> from uc_outgoing_transfer_registry.o(i._ZN6uavcan17MonotonicDurationD1Ev) referenced from uc_outgoing_transfer_registry.o(i.__sti___33_uc_outgoing_transfer_registry_cpp_e869a750)
 <LI><a href="#[d7]">uavcan::NodeStatusProvider::handleTimerEvent(const uavcan::TimerEvent&)</a> from uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider16handleTimerEventERKNS_10TimerEventE) referenced from uc_node_status_provider.o(.constdata__ZTVN6uavcan18NodeStatusProviderE)
 <LI><a href="#[95]">uavcan::NodeStatusProvider::handleGetNodeInfoRequest(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)</a> from uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider24handleGetNodeInfoRequestERKNS_8protocol12GetNodeInfo_8Request_ILi0EEERNS2_9Response_ILi0EEE) referenced from uc_node_status_provider.o(.constdata)
 <LI><a href="#[94]">uavcan::GlobalTimeSyncSlave::handleGlobalTimeSync(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)</a> from scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlave20handleGlobalTimeSyncERKNS_21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[70]">uavcan::GlobalTimeSyncSlave::~GlobalTimeSyncSlave()</a> from scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlaveD1Ev) referenced from scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
 <LI><a href="#[92]">uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)</a> from scu_libuavcan.o(i._ZN6uavcan20DataTypeInfoProvider28handleGetDataTypeInfoRequestERKNS_8protocol16GetDataTypeInfo_8Request_ILi0EEERNS2_9Response_ILi0EEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[d9]">uavcan::LimitedPoolAllocator::deallocate(const void*)</a> from uc_dynamic_memory.o(i._ZN6uavcan20LimitedPoolAllocator10deallocateEPKv) referenced from uc_dynamic_memory.o(.constdata__ZTVN6uavcan20LimitedPoolAllocatorE)
 <LI><a href="#[d8]">uavcan::LimitedPoolAllocator::allocate(unsigned)</a> from uc_dynamic_memory.o(i._ZN6uavcan20LimitedPoolAllocator8allocateEj) referenced from uc_dynamic_memory.o(.constdata__ZTVN6uavcan20LimitedPoolAllocatorE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt123EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt1EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt371EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt377EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt73EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt7EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt93EEE)
 <LI><a href="#[dc]">uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj) referenced from uc_transfer_buffer.o(.constdata__ZTVN6uavcan24StaticTransferBufferImplE)
 <LI><a href="#[de]">uavcan::MultiFrameIncomingTransfer::release()</a> from uc_transfer_listener.o(i._ZN6uavcan26MultiFrameIncomingTransfer7releaseEv) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
 <LI><a href="#[e1]">uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned)</a> from uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5writeEjPKhj) referenced from uc_transfer_buffer.o(.constdata__ZTVN6uavcan26TransferBufferManagerEntryE)
 <LI><a href="#[df]">uavcan::TransferBufferManagerEntry::~TransferBufferManagerEntry()</a> from uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntryD1Ev) referenced from uc_transfer_buffer.o(.constdata__ZTVN6uavcan26TransferBufferManagerEntryE)
 <LI><a href="#[7e]">uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()</a> from uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairC1Ev) referenced from uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6insertERKS1_RKS2_)
 <LI><a href="#[7f]">uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::~KVPair()</a> from uc_transfer_listener.o(i._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairD1Ev) referenced from uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE7compactEv)
 <LI><a href="#[80]">uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()</a> from uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairC1Ev) referenced from uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6insertERKS1_RKS3_)
 <LI><a href="#[81]">uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::~KVPair()</a> from scu_libuavcan.o(i._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairD1Ev) referenced from uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE7compactEv)
 <LI><a href="#[e4]">uavcan::Node&lang;(unsigned)25600&rang;::getAllocator()</a> from scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE12getAllocatorEv) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
 <LI><a href="#[e5]">uavcan::Node&lang;(unsigned)25600&rang;::getScheduler()</a> from scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE12getSchedulerEv) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
 <LI><a href="#[e7]">uavcan::Node&lang;(unsigned)25600&rang;::registerInternalFailure(const char*)</a> from scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE23registerInternalFailureEPKc) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
 <LI><a href="#[6d]">uavcan::Node&lang;(unsigned)25600&rang;::~Node()</a> from scu_libuavcan.o(i._ZN6uavcan4NodeILj25600EED1Ev) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
 <LI><a href="#[6d]">uavcan::Node&lang;(unsigned)25600&rang;::~Node()</a> from scu_libuavcan.o(i._ZN6uavcan4NodeILj25600EED1Ev) referenced from scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
 <LI><a href="#[7c]">uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;::CANIfaceStats_()</a> from scu_libuavcan.o(t._ZN6uavcan8protocol14CANIfaceStats_ILi0EEC1Ev) referenced from scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE)
 <LI><a href="#[d6]">uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime)</a> from uc_timer.o(i._ZN6uavcan9TimerBase14handleDeadlineENS_13MonotonicTimeE) referenced from uc_node_status_provider.o(.constdata__ZTVN6uavcan18NodeStatusProviderE)
 <LI><a href="#[d6]">uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime)</a> from uc_timer.o(i._ZN6uavcan9TimerBase14handleDeadlineENS_13MonotonicTimeE) referenced from uc_timer.o(.constdata__ZTVN6uavcan9TimerBaseE)
 <LI><a href="#[7d]">uavcan::equipment::actuator::Command_&lang;(int)0&rang;::Command_()</a> from scu_libuavcan.o(t._ZN6uavcan9equipment8actuator8Command_ILi0EEC1Ev) referenced from scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE)
 <LI><a href="#[9d]">uavcan_stm32::SystemClock::getMonotonic() const</a> from uc_stm32_clock.o(i._ZNK12uavcan_stm3211SystemClock12getMonotonicEv) referenced from uc_stm32_clock.o(.constdata__ZTVN12uavcan_stm3211SystemClockE)
 <LI><a href="#[a1]">uavcan_stm32::CanIface::getErrorCount() const</a> from uc_stm32_can.o(i._ZNK12uavcan_stm328CanIface13getErrorCountEv) referenced from uc_stm32_can.o(.constdata__ZTVN12uavcan_stm328CanIfaceE)
 <LI><a href="#[a3]">uavcan_stm32::CanDriver::getNumIfaces() const</a> from uc_stm32_can.o(i._ZNK12uavcan_stm329CanDriver12getNumIfacesEv) referenced from uc_stm32_can.o(.constdata__ZTVN12uavcan_stm329CanDriverE)
 <LI><a href="#[98]">ScuParamManager::readParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&) const</a> from scuparammanager.o(i._ZNK15ScuParamManager14readParamValueERKN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEERNS0_8protocol5param6Value_ILi0EEE) referenced from scuparammanager.o(.constdata__ZTV15ScuParamManager)
 <LI><a href="#[96]">ScuParamManager::getParamNameByIndex(unsigned short, uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&) const</a> from scuparammanager.o(i._ZNK15ScuParamManager19getParamNameByIndexEtRN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEE) referenced from scuparammanager.o(.constdata__ZTV15ScuParamManager)
 <LI><a href="#[99]">ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const</a> from scuparammanager.o(i._ZNK15ScuParamManager22readParamDefaultMaxMinERKN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEERNS0_8protocol5param6Value_ILi0EEERNSB_13NumericValue_ILi0EEESH_) referenced from scuparammanager.o(.constdata__ZTV15ScuParamManager)
 <LI><a href="#[a9]">uavcan::PoolAllocator&lang;(unsigned)25600, (unsigned char)64, char&rang;::getBlockCapacity() const</a> from scu_libuavcan.o(t._ZNK6uavcan13PoolAllocatorILj25600ELh64EcE16getBlockCapacityEv) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan13PoolAllocatorILj25600ELh64EcEE)
 <LI><a href="#[89]">uavcan::IncomingTransfer::getPriority() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer11getPriorityEv) referenced 7 times from scu_libuavcan.o(.constdata)
 <LI><a href="#[8a]">uavcan::IncomingTransfer::getSrcNodeID() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer12getSrcNodeIDEv) referenced 8 times from scu_libuavcan.o(.constdata)
 <LI><a href="#[91]">uavcan::IncomingTransfer::getIfaceIndex() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer13getIfaceIndexEv) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[8b]">uavcan::IncomingTransfer::getTransferID() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer13getTransferIDEv) referenced 8 times from scu_libuavcan.o(.constdata)
 <LI><a href="#[90]">uavcan::IncomingTransfer::getTransferType() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer15getTransferTypeEv) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[8f]">uavcan::IncomingTransfer::getUtcTimestamp() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer15getUtcTimestampEv) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[bb]">uavcan::IncomingTransfer::isAnonymousTransfer() const</a> from uc_transfer_listener.o(i._ZNK6uavcan16IncomingTransfer19isAnonymousTransferEv) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
 <LI><a href="#[bb]">uavcan::IncomingTransfer::isAnonymousTransfer() const</a> from uc_transfer_listener.o(i._ZNK6uavcan16IncomingTransfer19isAnonymousTransferEv) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
 <LI><a href="#[8e]">uavcan::IncomingTransfer::getMonotonicTimestamp() const</a> from scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer21getMonotonicTimestampEv) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[da]">uavcan::LimitedPoolAllocator::getBlockCapacity() const</a> from uc_dynamic_memory.o(i._ZNK6uavcan20LimitedPoolAllocator16getBlockCapacityEv) referenced from uc_dynamic_memory.o(.constdata__ZTVN6uavcan20LimitedPoolAllocatorE)
 <LI><a href="#[85]">uavcan::RestartRequestServer::handleRestartNode(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const</a> from scu_libuavcan.o(i._ZNK6uavcan20RestartRequestServer17handleRestartNodeERKNS_21ReceivedDataStructureINS_8protocol12RestartNode_8Request_ILi0EEEEERNS3_9Response_ILi0EEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[93]">uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const</a> from scu_libuavcan.o(i._ZNK6uavcan22TransportStatsProvider23handleGetTransportStatsERKNS_8protocol18GetTransportStats_8Request_ILi0EEERNS2_9Response_ILi0EEE) referenced from scu_libuavcan.o(.constdata)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt123EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt1EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt371EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt377EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt73EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt7EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt93EEE)
 <LI><a href="#[db]">uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj) referenced from uc_transfer_buffer.o(.constdata__ZTVN6uavcan24StaticTransferBufferImplE)
 <LI><a href="#[dd]">uavcan::MultiFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_listener.o(i._ZNK6uavcan26MultiFrameIncomingTransfer4readEjPhj) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
 <LI><a href="#[e0]">uavcan::TransferBufferManagerEntry::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_buffer.o(i._ZNK6uavcan26TransferBufferManagerEntry4readEjPhj) referenced from uc_transfer_buffer.o(.constdata__ZTVN6uavcan26TransferBufferManagerEntryE)
 <LI><a href="#[e3]">uavcan::SingleFrameIncomingTransfer::isAnonymousTransfer() const</a> from uc_transfer_listener.o(i._ZNK6uavcan27SingleFrameIncomingTransfer19isAnonymousTransferEv) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
 <LI><a href="#[e2]">uavcan::SingleFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const</a> from uc_transfer_listener.o(i._ZNK6uavcan27SingleFrameIncomingTransfer4readEjPhj) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
 <LI><a href="#[e6]">uavcan::Node&lang;(unsigned)25600&rang;::getScheduler() const</a> from scu_libuavcan.o(t._ZNK6uavcan4NodeILj25600EE12getSchedulerEv) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan15DeadlineHandlerE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from uc_transfer_listener.o(.constdata__ZTVN6uavcan16TransferListenerE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEEE)
 <LI><a href="#[b7]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from uc_timer.o(.constdata__ZTVN6uavcan9TimerBaseE)
 <LI><a href="#[f5]">__main</a> from __main.o(!!!main) referenced from startup_stm32f405xx.o(.text)
 <LI><a href="#[e8]">__sti___12_freertos_cpp_e87d2b16</a> from freertos.o(i.__sti___12_freertos_cpp_e87d2b16) referenced from freertos.o(.init_array)
 <LI><a href="#[ef]">__sti___15_uc_transfer_cpp_49afa4ea</a> from uc_transfer.o(i.__sti___15_uc_transfer_cpp_49afa4ea) referenced from uc_transfer.o(.init_array)
 <LI><a href="#[f2]">__sti___16_uc_stm32_can_cpp_7d6b3317</a> from uc_stm32_can.o(i.__sti___16_uc_stm32_can_cpp_7d6b3317) referenced from uc_stm32_can.o(.init_array)
 <LI><a href="#[ea]">__sti___17_scu_libuavcan_cpp_a5b52e7e</a> from scu_libuavcan.o(i.__sti___17_scu_libuavcan_cpp_a5b52e7e) referenced from scu_libuavcan.o(.init_array)
 <LI><a href="#[f3]">__sti___18_uc_stm32_clock_cpp_87095aac</a> from uc_stm32_clock.o(i.__sti___18_uc_stm32_clock_cpp_87095aac) referenced from uc_stm32_clock.o(.init_array)
 <LI><a href="#[ec]">__sti___19_ScuParamManager_cpp_e368b1fe</a> from scuparammanager.o(i.__sti___19_ScuParamManager_cpp_e368b1fe) referenced from scuparammanager.o(.init_array)
 <LI><a href="#[f4]">__sti___19_uc_stm32_thread_cpp_d810ad60</a> from uc_stm32_thread.o(i.__sti___19_uc_stm32_thread_cpp_d810ad60) referenced from uc_stm32_thread.o(.init_array)
 <LI><a href="#[eb]">__sti___22_scu_libuavcanSTM32_cpp_be63688e</a> from scu_libuavcanstm32.o(i.__sti___22_scu_libuavcanSTM32_cpp_be63688e) referenced from scu_libuavcanstm32.o(.init_array)
 <LI><a href="#[f1]">__sti___27_uc_node_status_provider_cpp_54b78f91</a> from uc_node_status_provider.o(i.__sti___27_uc_node_status_provider_cpp_54b78f91) referenced from uc_node_status_provider.o(.init_array)
 <LI><a href="#[ed]">__sti___28_ScuRestartRequestHandler_cpp_1d0ead51</a> from scurestartrequesthandler.o(i.__sti___28_ScuRestartRequestHandler_cpp_1d0ead51) referenced from scurestartrequesthandler.o(.init_array)
 <LI><a href="#[f0]">__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3</a> from uc_dynamic_node_id_client.o(i.__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3) referenced from uc_dynamic_node_id_client.o(.init_array)
 <LI><a href="#[ee]">__sti___33_uc_outgoing_transfer_registry_cpp_e869a750</a> from uc_outgoing_transfer_registry.o(i.__sti___33_uc_outgoing_transfer_registry_cpp_e869a750) referenced from uc_outgoing_transfer_registry.o(.init_array)
 <LI><a href="#[e9]">__sti___8_main_cpp_scu_can1</a> from main.o(i.__sti___8_main_cpp_scu_can1) referenced from main.o(.init_array)
 <LI><a href="#[79]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[78]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[f5]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[f7]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[f9]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[35c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[35d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[35e]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[35f]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[360]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[104]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[fa]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[fc]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[361]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[362]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[363]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[364]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[365]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[366]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[367]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[368]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[369]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[36a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[36b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[36c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[36d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[36e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[36f]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[370]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[371]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[372]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[373]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[374]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[109]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[ff]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[375]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[376]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[377]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[378]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[379]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[37a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[37b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[f8]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[37c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[101]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[103]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[37d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[105]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MX_FREERTOS_Init() &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[37e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[124]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[108]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[37f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[10a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[16]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2e6]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[2e5]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[18]"></a>PendSV_Handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2db]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[10]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[380]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[2c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f405xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[381]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>__aeabi_llsr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::mixin64(unsigned long long)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::toTransferCRC() const
</UL>

<P><STRONG><a name="[382]"></a>_ll_ushift_r</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::publish()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::updateTransferTimings()
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::wait(uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[10d]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[10f]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___33_uc_outgoing_transfer_registry_cpp_e869a750
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCanDriver()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
</UL>

<P><STRONG><a name="[26d]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const
</UL>

<P><STRONG><a name="[241]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setName(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setHardwareVersion(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[114]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[383]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::handleGetNodeInfoRequest(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::handleGetSet(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::pop(uavcan::CanFrame&, unsigned long long&, unsigned short&)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::send(const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[384]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[385]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[386]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[33b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[387]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[388]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[389]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[38a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[189]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, aeabi_vec_dtor_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::~CanInitHelper()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>

<P><STRONG><a name="[10b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[113]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[112]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[118]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[100]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[110]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[11b]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[38b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[38c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[38d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[38e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[38f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[390]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[391]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[11e]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[fd]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[120]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[9]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[119]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[11c]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[102]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[11d]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[107]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[121]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[11f]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[125]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[126]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[14]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uc_stm32_can.o(i.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char) &rArr; uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long) &rArr; uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uc_stm32_can.o(i.CAN1_RX1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CAN1_RX1_IRQHandler &rArr; uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char) &rArr; uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long) &rArr; uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, uc_stm32_can.o(i.CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CAN1_TX_IRQHandler &rArr; uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long) &rArr; uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getUtcUSecFromCanInterrupt()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2e2]"></a>FLASH_Erase_Sector</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, stm32f4xx_hal_flash_ex.o(i.FLASH_Erase_Sector))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
</UL>

<P><STRONG><a name="[12a]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[2e3]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
</UL>

<P><STRONG><a name="[12d]"></a>HAL_FLASH_Program</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Word
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_HalfWord
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_DoubleWord
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFloat2Flash
</UL>

<P><STRONG><a name="[2e0]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
</UL>

<P><STRONG><a name="[15d]"></a>HAL_GPIO_Init</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::can_init()
</UL>

<P><STRONG><a name="[2b9]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_IRQHandler
</UL>

<P><STRONG><a name="[15f]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_IRQHandler
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[12b]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[159]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[132]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[134]"></a>HAL_InitTick</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, stm32f4xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[135]"></a>HAL_MspInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[16a]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPulsCnt
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Dequeue
</UL>

<P><STRONG><a name="[137]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPulsCnt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Dequeue
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::nvicEnableVector(IRQn_Type, unsigned char)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::init()
</UL>

<P><STRONG><a name="[136]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::nvicEnableVector(IRQn_Type, unsigned char)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::init()
</UL>

<P><STRONG><a name="[133]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[16f]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcanTask(const void*)
</UL>

<P><STRONG><a name="[13d]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[138]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[181]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[168]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)
</UL>

<P><STRONG><a name="[139]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[13e]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[13f]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 730 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[182]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[140]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[14d]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14f]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[163]"></a>HAL_TIMEx_ConfigBreakDeadTime</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_ConfigBreakDeadTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIMEx_ConfigBreakDeadTime
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[162]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[13a]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[141]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[13b]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[143]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[149]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[148]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_TIM9_IRQHandler
</UL>

<P><STRONG><a name="[150]"></a>HAL_TIM_OC_ConfigChannel</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_OC_ConfigChannel &rArr; TIM_OC4_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[14a]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[155]"></a>HAL_TIM_OC_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_OC_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[156]"></a>HAL_TIM_OC_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
</UL>

<P><STRONG><a name="[157]"></a>HAL_TIM_OC_Start_IT</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_OC_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_init
</UL>

<P><STRONG><a name="[14b]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14c]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[14e]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[15a]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART6_UART_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[15b]"></a>HAL_UART_MspInit</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[12]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>MX_GPIO_Init</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[160]"></a>MX_TIM8_Init</STRONG> (Thumb, 258 bytes, Stack size 96 bytes, tim.o(i.MX_TIM8_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MX_TIM8_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_ConfigBreakDeadTime
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[165]"></a>MX_USART6_UART_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usart.o(i.MX_USART6_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_USART6_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; osSystickHandler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM1_BRK_TIM9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM1_BRK_TIM9_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM3_IRQHandler</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, uc_stm32_clock.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM8_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TIM8_CC_IRQHandler &rArr; mm_control_IRQHandler &rArr; xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[142]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[158]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Start_IT
</UL>

<P><STRONG><a name="[152]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[169]"></a>USART1_Dequeue</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usart.o(i.USART1_Dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_Dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDecodeMsgTask(void*)
</UL>

<P><STRONG><a name="[3f]"></a>USART1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART1_IRQHandler &rArr; usart1_IRQHandler &rArr; vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[161]"></a>_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i._Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART6_UART_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[84]"></a>uavcanTask(const void*)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, freertos.o(i._Z10uavcanTaskPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 920 + Unknown Stack Size
<LI>Call Chain = uavcanTask(const void*) &rArr; scu_libuavcan::scu_libuavcan_Init(int) &rArr; uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::publish() &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::start()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::spin(unsigned)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::get_system_reset_flag()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>getCanDriver()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, scu_libuavcanstm32.o(i._Z12getCanDriverv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = getCanDriver() &rArr; uavcan_stm32::CanDriver::init(unsigned, uavcan_stm32::CanIface::OperatingMode) &rArr; uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode) &rArr; uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool) &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::CanInitHelper()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[83]"></a>mmControlTask(const void*)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, freertos.o(i._Z13mmControlTaskPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mmControlTask(const void*) &rArr; mm_control_algorithm &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_algorithm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>getSystemClock()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcanstm32.o(i._Z14getSystemClockv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = getSystemClock() &rArr; uavcan_stm32::SystemClock::instance() &rArr; uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&) &rArr; uavcan_stm32::Mutex::lock() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::SystemClock::instance()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[6b]"></a>vDecodeMsgTask(void*)</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, freertos.o(i._Z14vDecodeMsgTaskPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = vDecodeMsgTask(void*) &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Dequeue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i._Z16MX_FREERTOS_Initv)
</UL>
<P><STRONG><a name="[17c]"></a>MX_FREERTOS_Init()</STRONG> (Thumb, 312 bytes, Stack size 136 bytes, freertos.o(i._Z16MX_FREERTOS_Initv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = MX_FREERTOS_Init() &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>StartDefaultTask(const void*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, freertos.o(i._Z16StartDefaultTaskPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = StartDefaultTask(const void*) &rArr;  StartDefaultTask(const void*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask(const void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask(const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>SystemClock_Config()</STRONG> (Thumb, 152 bytes, Stack size 88 bytes, main.o(i._Z18SystemClock_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SystemClock_Config() &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[183]"></a>uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm3211MutexLockerC1ERNS_5MutexE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&) &rArr; uavcan_stm32::Mutex::lock() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::Mutex::lock()
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::SystemClock::instance()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[392]"></a>uavcan_stm32::MutexLocker::MutexLocker__sub_object(uavcan_stm32::Mutex&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm3211MutexLockerC1ERNS_5MutexE), UNUSED)

<P><STRONG><a name="[185]"></a>uavcan_stm32::MutexLocker::~MutexLocker()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm3211MutexLockerD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uavcan_stm32::MutexLocker::~MutexLocker() &rArr; uavcan_stm32::Mutex::unlock() &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::Mutex::unlock()
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::SystemClock::instance()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[393]"></a>uavcan_stm32::MutexLocker::~MutexLocker__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm3211MutexLockerD1Ev), UNUSED)

<P><STRONG><a name="[179]"></a>uavcan_stm32::SystemClock::instance()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm3211SystemClock8instanceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan_stm32::SystemClock::instance() &rArr; uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&) &rArr; uavcan_stm32::Mutex::lock() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::MutexLocker::~MutexLocker()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemClock()
</UL>

<P><STRONG><a name="[9e]"></a>uavcan_stm32::SystemClock::adjustUtc(uavcan::UtcDuration)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm3211SystemClock9adjustUtcEN6uavcan11UtcDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = uavcan_stm32::SystemClock::adjustUtc(uavcan::UtcDuration) &rArr; uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration) &rArr; uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&) &rArr; uavcan_stm32::Mutex::lock() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_clock.o(.constdata__ZTVN12uavcan_stm3211SystemClockE)
</UL>
<P><STRONG><a name="[6a]"></a>uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::~CanInitHelper()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm3213CanInitHelperILj128EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::~CanInitHelper() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcanstm32.o(i._Z12getCanDriverv)
</UL>
<P><STRONG><a name="[394]"></a>uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::~CanInitHelper__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm3213CanInitHelperILj128EED1Ev), UNUSED)

<P><STRONG><a name="[184]"></a>uavcan_stm32::Mutex::lock()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_stm32_thread.o(i._ZN12uavcan_stm325Mutex4lockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uavcan_stm32::Mutex::lock() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&)
</UL>

<P><STRONG><a name="[186]"></a>uavcan_stm32::Mutex::unlock()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_stm32_thread.o(i._ZN12uavcan_stm325Mutex6unlockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan_stm32::Mutex::unlock() &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::MutexLocker::~MutexLocker()
</UL>

<P><STRONG><a name="[18c]"></a>uavcan_stm32::clock::getMonotonic()</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock12getMonotonicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan_stm32::clock::getMonotonic()
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::SystemClock::getMonotonic() const
</UL>

<P><STRONG><a name="[74]"></a>uavcan_stm32::clock::UtcSyncParams::~UtcSyncParams()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock13UtcSyncParamsD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_clock.o(i.__sti___18_uc_stm32_clock_cpp_87095aac)
</UL>
<P><STRONG><a name="[395]"></a>uavcan_stm32::clock::UtcSyncParams::~UtcSyncParams__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock13UtcSyncParamsD1Ev), UNUSED)

<P><STRONG><a name="[128]"></a>uavcan_stm32::clock::getUtcUSecFromCanInterrupt()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock26getUtcUSecFromCanInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan_stm32::clock::getUtcUSecFromCanInterrupt() &rArr; uavcan_stm32::clock::sampleUtcFromCriticalSection()
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::sampleUtcFromCriticalSection()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
</UL>

<P><STRONG><a name="[187]"></a>uavcan_stm32::clock::init()</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan_stm32::clock::init() &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::SystemClock::instance()
</UL>

<P><STRONG><a name="[188]"></a>uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock9adjustUtcEN6uavcan11UtcDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration) &rArr; uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&) &rArr; uavcan_stm32::Mutex::lock() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::MutexLocker::~MutexLocker()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::MutexLocker::MutexLocker(uavcan_stm32::Mutex&)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::SystemClock::adjustUtc(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[19d]"></a>uavcan_stm32::BusEvent::yieldFromISR()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uc_stm32_thread.o(i._ZN12uavcan_stm328BusEvent12yieldFromISREv))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)
</UL>

<P><STRONG><a name="[194]"></a>uavcan_stm32::BusEvent::signalFromInterrupt()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uc_stm32_thread.o(i._ZN12uavcan_stm328BusEvent19signalFromInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)
</UL>

<P><STRONG><a name="[196]"></a>uavcan_stm32::BusEvent::wait(uavcan::MonotonicDuration)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, uc_stm32_thread.o(i._ZN12uavcan_stm328BusEvent4waitEN6uavcan17MonotonicDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan_stm32::BusEvent::wait(uavcan::MonotonicDuration) &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[198]"></a>uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface14computeTimingsEjRNS0_7TimingsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)::BsPair::BsPair(unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
</UL>

<P><STRONG><a name="[18b]"></a>uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface17handleRxInterruptEhy))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long) &rArr; uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::CanFrame()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::signalFromInterrupt()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::yieldFromISR()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::pollErrorFlagsFromISR()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[129]"></a>uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long)</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface17handleTxInterruptEy))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long) &rArr; uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::signalFromInterrupt()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::yieldFromISR()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxMailboxInterrupt(unsigned char, bool, unsigned long long)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::pollErrorFlagsFromISR()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
</UL>

<P><STRONG><a name="[19c]"></a>uavcan_stm32::CanIface::pollErrorFlagsFromISR()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface21pollErrorFlagsFromISREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan_stm32::CanIface::pollErrorFlagsFromISR()
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)
</UL>

<P><STRONG><a name="[19e]"></a>uavcan_stm32::CanIface::handleTxMailboxInterrupt(unsigned char, bool, unsigned long long)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface24handleTxMailboxInterruptEhby))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan_stm32::CanIface::handleTxMailboxInterrupt(unsigned char, bool, unsigned long long) &rArr; uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxInterrupt(unsigned long long)
</UL>

<P><STRONG><a name="[19f]"></a>uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface25waitMsrINakBitStateChangeEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool) &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
</UL>

<P><STRONG><a name="[1a0]"></a>uavcan_stm32::CanIface::discardTimedOutTxMailboxes(uavcan::MonotonicTime)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface26discardTimedOutTxMailboxesEN6uavcan13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan_stm32::CanIface::discardTimedOutTxMailboxes(uavcan::MonotonicTime)
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1a1]"></a>uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)</STRONG> (Thumb, 396 bytes, Stack size 96 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface4initEjNS0_13OperatingModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode) &rArr; uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool) &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::CanFrame()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::reset()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
</UL>

<P><STRONG><a name="[9f]"></a>uavcan_stm32::CanIface::send(const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface4sendERKN6uavcan8CanFrameENS1_13MonotonicTimeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan_stm32::CanIface::send(const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.constdata__ZTVN12uavcan_stm328CanIfaceE)
</UL>
<P><STRONG><a name="[7b]"></a>uavcan_stm32::CanIface::TxItem::TxItem()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm328CanIface6TxItemC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan_stm32::CanIface::TxItem::TxItem()
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::CanFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcanstm32.o(t._ZN12uavcan_stm3213CanInitHelperILj128EEC1Ev)
</UL>
<P><STRONG><a name="[396]"></a>uavcan_stm32::CanIface::TxItem::TxItem__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm328CanIface6TxItemC1Ev), UNUSED)

<P><STRONG><a name="[6c]"></a>uavcan_stm32::CanIface::TxItem::~TxItem()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm328CanIface6TxItemD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcanstm32.o(i._ZN12uavcan_stm3213CanInitHelperILj128EED1Ev)
</UL>
<P><STRONG><a name="[397]"></a>uavcan_stm32::CanIface::TxItem::~TxItem__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm328CanIface6TxItemD1Ev), UNUSED)

<P><STRONG><a name="[1a4]"></a>uavcan_stm32::CanIface::RxQueue::registerOverflow()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface7RxQueue16registerOverflowEv))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short)
</UL>

<P><STRONG><a name="[1a3]"></a>uavcan_stm32::CanIface::RxQueue::pop(uavcan::CanFrame&, unsigned long long&, unsigned short&)</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface7RxQueue3popERN6uavcan8CanFrameERyRt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan_stm32::CanIface::RxQueue::pop(uavcan::CanFrame&, unsigned long long&, unsigned short&) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&)
</UL>

<P><STRONG><a name="[19b]"></a>uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short)</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface7RxQueue4pushERKN6uavcan8CanFrameERKyt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan_stm32::CanIface::RxQueue::push(const uavcan::CanFrame&, const unsigned long long&, unsigned short) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::registerOverflow()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleTxMailboxInterrupt(unsigned char, bool, unsigned long long)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)
</UL>

<P><STRONG><a name="[1a2]"></a>uavcan_stm32::CanIface::RxQueue::reset()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface7RxQueue5resetEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
</UL>

<P><STRONG><a name="[a0]"></a>uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&)</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, uc_stm32_can.o(i._ZN12uavcan_stm328CanIface7receiveERN6uavcan8CanFrameERNS1_13MonotonicTimeERNS1_7UtcTimeERt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&) &rArr; uavcan_stm32::clock::getMonotonic()
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getMonotonic()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::RxQueue::pop(uavcan::CanFrame&, unsigned long long&, unsigned short&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.constdata__ZTVN12uavcan_stm328CanIfaceE)
</UL>
<P><STRONG><a name="[174]"></a>uavcan_stm32::CanDriver::init(unsigned, uavcan_stm32::CanIface::OperatingMode)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZN12uavcan_stm329CanDriver4initEjNS_8CanIface13OperatingModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = uavcan_stm32::CanDriver::init(unsigned, uavcan_stm32::CanIface::OperatingMode) &rArr; uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode) &rArr; uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool) &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::initOnce()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCanDriver()
</UL>

<P><STRONG><a name="[a4]"></a>uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, uc_stm32_can.o(i._ZN12uavcan_stm329CanDriver6selectERN6uavcan14CanSelectMasksERA3_PKNS1_8CanFrameENS1_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime) &rArr; uavcan_stm32::BusEvent::wait(uavcan::MonotonicDuration) &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::wait(uavcan::MonotonicDuration)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getMonotonic()
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::makeSelectMasks(const uavcan::CanFrame*(&)[3]) const
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::discardTimedOutTxMailboxes(uavcan::MonotonicTime)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::pollErrorFlagsFromISR()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.constdata__ZTVN12uavcan_stm329CanDriverE)
</UL>
<P><STRONG><a name="[a2]"></a>uavcan_stm32::CanDriver::getIface(unsigned char)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_stm32_can.o(i._ZN12uavcan_stm329CanDriver8getIfaceEh))
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.constdata__ZTVN12uavcan_stm329CanDriverE)
</UL>
<P><STRONG><a name="[1a5]"></a>uavcan_stm32::CanDriver::initOnce()</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, uc_stm32_can.o(i._ZN12uavcan_stm329CanDriver8initOnceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan_stm32::CanDriver::initOnce() &rArr; uavcan_stm32::nvicEnableVector(IRQn_Type, unsigned char) &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::nvicEnableVector(IRQn_Type, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
</UL>

<P><STRONG><a name="[7a]"></a>uavcan_stm32::CanRxItem::CanRxItem()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm329CanRxItemC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan_stm32::CanRxItem::CanRxItem()
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::CanFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcanstm32.o(t._ZN12uavcan_stm3213CanInitHelperILj128EEC1Ev)
</UL>
<P><STRONG><a name="[398]"></a>uavcan_stm32::CanRxItem::CanRxItem__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i._ZN12uavcan_stm329CanRxItemC1Ev), UNUSED)

<P><STRONG><a name="[88]"></a>scu_libuavcan::motor_ref_callback(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, scu_libuavcan.o(i._ZN13scu_libuavcan18motor_ref_callbackERKN6uavcan9equipment8actuator13ArrayCommand_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = scu_libuavcan::motor_ref_callback(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&) &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::operator [](unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>scu_libuavcan::scu_libuavcan_Init(int)</STRONG> (Thumb, 648 bytes, Stack size 160 bytes, scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 920 + Unknown Stack Size
<LI>Call Chain = scu_libuavcan::scu_libuavcan_Init(int) &rArr; uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::publish() &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setName(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setSoftwareVersion(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setHardwareVersion(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::setNodeID(uavcan::NodeID)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemClock()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCanDriver()
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;::operator bool() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcanTask(const void*)
</UL>

<P><STRONG><a name="[16e]"></a>scu_libuavcan::get_system_reset_flag()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN13scu_libuavcan21get_system_reset_flagEv))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcanTask(const void*)
</UL>

<P><STRONG><a name="[170]"></a>scu_libuavcan::spin(unsigned)</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, scu_libuavcan.o(i._ZN13scu_libuavcan4spinEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = scu_libuavcan::spin(unsigned) &rArr; uavcan::Scheduler::spin(uavcan::MonotonicTime) &rArr; uavcan::Dispatcher::spin(uavcan::MonotonicTime) &rArr; uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getMonotonicTime() const
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::spin(uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcanTask(const void*)
</UL>

<P><STRONG><a name="[16d]"></a>scu_libuavcan::start()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN13scu_libuavcan5startEv))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setMode(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcanTask(const void*)
</UL>

<P><STRONG><a name="[1c0]"></a>scu_libuavcan::can_init()</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN13scu_libuavcan8can_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = scu_libuavcan::can_init() &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c1]"></a>scu_libuavcan::scu_libuavcan()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN13scu_libuavcanC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scu_libuavcan::scu_libuavcan() &rArr; uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::SoftwareVersion_()
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
</UL>

<P><STRONG><a name="[399]"></a>scu_libuavcan::scu_libuavcan__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN13scu_libuavcanC1Ev), UNUSED)

<P><STRONG><a name="[77]"></a>scu_libuavcan::~scu_libuavcan()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i._ZN13scu_libuavcanD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.__sti___8_main_cpp_scu_can1)
</UL>
<P><STRONG><a name="[39a]"></a>scu_libuavcan::~scu_libuavcan__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(i._ZN13scu_libuavcanD1Ev), UNUSED)

<P><STRONG><a name="[9a]"></a>ScuParamManager::saveAllParams()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scuparammanager.o(i._ZN15ScuParamManager13saveAllParamsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ScuParamManager::saveAllParams() &rArr; writeParams2Flash &rArr; writeFloat2Flash &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.constdata__ZTV15ScuParamManager)
</UL>
<P><STRONG><a name="[9b]"></a>ScuParamManager::eraseAllParams()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scuparammanager.o(i._ZN15ScuParamManager14eraseAllParamsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ScuParamManager::eraseAllParams()
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDefaultParameters
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.constdata__ZTV15ScuParamManager)
</UL>
<P><STRONG><a name="[97]"></a>ScuParamManager::assignParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, const uavcan::protocol::param::Value_&lang;(int)0&rang;&)</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, scuparammanager.o(i._ZN15ScuParamManager16assignParamValueERKN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEERKNS0_8protocol5param6Value_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ScuParamManager::assignParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, const uavcan::protocol::param::Value_&lang;(int)0&rang;&) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType* uavcan::protocol::param::Value_&lang;(int)0&rang;::as&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)1&rang;() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.constdata__ZTV15ScuParamManager)
</UL>
<P><STRONG><a name="[9c]"></a>ScuRestartRequestHandler::handleRestartRequest(uavcan::NodeID)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scurestartrequesthandler.o(i._ZN24ScuRestartRequestHandler20handleRestartRequestEN6uavcan6NodeIDE))
<BR>[Address Reference Count : 1]<UL><LI> scurestartrequesthandler.o(.constdata__ZTV24ScuRestartRequestHandler)
</UL>
<P><STRONG><a name="[1c8]"></a>uavcan::CanRxFrame::CanRxFrame()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uc_dispatcher.o(i._ZN6uavcan10CanRxFrameC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::CanRxFrame::CanRxFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::CanFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[39b]"></a>uavcan::CanRxFrame::CanRxFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uc_dispatcher.o(i._ZN6uavcan10CanRxFrameC1Ev), UNUSED)

<P><STRONG><a name="[1eb]"></a>uavcan::CanRxFrame::~CanRxFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10CanRxFrameD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[39c]"></a>uavcan::CanRxFrame::~CanRxFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10CanRxFrameD1Ev), UNUSED)

<P><STRONG><a name="[1cb]"></a>uavcan::CanTxQueue::registerRejectedFrame()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueue21registerRejectedFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::peek()
</UL>

<P><STRONG><a name="[1c9]"></a>uavcan::CanTxQueue::peek()</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueue4peekEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::Entry::isExpired(uavcan::MonotonicTime) const
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::registerRejectedFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendFromTxQueue(unsigned char)
</UL>

<P><STRONG><a name="[1cd]"></a>uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueue4pushERKNS_8CanFrameENS_13MonotonicTimeENS0_3QosEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::CanTxQueue::Entry&rang;::remove(const uavcan::CanTxQueue::Entry*)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::Entry::isExpired(uavcan::MonotonicTime) const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::Entry::qosHigherThan(const uavcan::CanFrame&, uavcan::CanTxQueue::Qos) const
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::registerRejectedFrame()
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LimitedPoolAllocator::allocate(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[1d1]"></a>uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueue5Entry7destroyERPS1_RNS_14IPoolAllocatorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)
</UL>

<P><STRONG><a name="[1cc]"></a>uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueue6removeERPNS0_5EntryE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::CanTxQueue::Entry&rang;::remove(const uavcan::CanTxQueue::Entry*)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendFromTxQueue(unsigned char)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::peek()
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::~CanTxQueue()
</UL>

<P><STRONG><a name="[1d2]"></a>uavcan::CanTxQueue::~CanTxQueue()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueueD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::CanTxQueue::~CanTxQueue() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::~LazyConstructor()
</UL>

<P><STRONG><a name="[39d]"></a>uavcan::CanTxQueue::~CanTxQueue__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uc_can_io.o(i._ZN6uavcan10CanTxQueueD1Ev), UNUSED)

<P><STRONG><a name="[2a1]"></a>uavcan::DataTypeID::getMaxValueForDataTypeKind(uavcan::DataTypeKind)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_data_type.o(i._ZN6uavcan10DataTypeID26getMaxValueForDataTypeKindENS_12DataTypeKindE))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::isValid() const
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::isValid() const
</UL>

<P><STRONG><a name="[1d3]"></a>uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)</STRONG> (Thumb, 116 bytes, Stack size 80 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher11handleFrameERKNS_10CanRxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&) &rArr; uavcan::RxFrame::parse(const uavcan::CanRxFrame&) &rArr; uavcan::Frame::parse(const uavcan::CanFrame&) &rArr; uavcan::Frame::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::operator !=(uavcan::NodeID) const
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getDstNodeID() const
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::~RxFrame()
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::RxFrame()
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::parse(const uavcan::CanRxFrame&)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::handleFrame(const uavcan::RxFrame&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1d8]"></a>uavcan::Dispatcher::ListenerRegistry::handleFrame(const uavcan::RxFrame&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher16ListenerRegistry11handleFrameERKNS_7RxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Dispatcher::ListenerRegistry::handleFrame(const uavcan::RxFrame&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::operator ==(uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[1db]"></a>uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher16ListenerRegistry3addEPNS_16TransferListenerENS1_4ModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferListener&rang;::remove(const uavcan::TransferListener*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::DataTypeIDInsertionComparator::operator ()(const uavcan::TransferListener*) const
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::operator ==(uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::registerServiceRequestListener(uavcan::TransferListener*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::registerMessageListener(uavcan::TransferListener*)
</UL>

<P><STRONG><a name="[1de]"></a>uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher16ListenerRegistry6removeEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferListener&rang;::remove(const uavcan::TransferListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::unregisterServiceRequestListener(uavcan::TransferListener*)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::unregisterMessageListener(uavcan::TransferListener*)
</UL>

<P><STRONG><a name="[1df]"></a>uavcan::Dispatcher::ListenerRegistry::cleanup(uavcan::MonotonicTime)</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher16ListenerRegistry7cleanupENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = uavcan::Dispatcher::ListenerRegistry::cleanup(uavcan::MonotonicTime) &rArr; uavcan::TransferListener::cleanup(uavcan::MonotonicTime) &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1) &rArr; uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const &rArr; uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::cleanup(uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::cleanup(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1e1]"></a>uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&)</STRONG> (Thumb, 44 bytes, Stack size 72 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher19handleLoopbackFrameERKNS_10CanRxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&) &rArr; uavcan::RxFrame::parse(const uavcan::CanRxFrame&) &rArr; uavcan::Frame::parse(const uavcan::CanFrame&) &rArr; uavcan::Frame::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::~RxFrame()
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::RxFrame()
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::parse(const uavcan::CanRxFrame&)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LoopbackFrameListenerRegistry::invokeListeners(uavcan::RxFrame&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1ec]"></a>uavcan::Dispatcher::notifyRxFrameListener(const uavcan::CanRxFrame&, unsigned short)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher21notifyRxFrameListenerERKNS_10CanRxFrameEt))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[8d]"></a>uavcan::Dispatcher::registerMessageListener(uavcan::TransferListener*)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher23registerMessageListenerEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Dispatcher::registerMessageListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[1e3]"></a>uavcan::Dispatcher::unregisterMessageListener(uavcan::TransferListener*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher25unregisterMessageListenerEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Dispatcher::unregisterMessageListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
</UL>

<P><STRONG><a name="[8c]"></a>uavcan::Dispatcher::registerServiceRequestListener(uavcan::TransferListener*)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher30registerServiceRequestListenerEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Dispatcher::registerServiceRequestListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uc_node_status_provider.o(.constdata)
<LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[1e4]"></a>uavcan::Dispatcher::unregisterServiceRequestListener(uavcan::TransferListener*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher32unregisterServiceRequestListenerEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Dispatcher::unregisterServiceRequestListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
</UL>

<P><STRONG><a name="[1e5]"></a>uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher33unregisterServiceResponseListenerEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
</UL>

<P><STRONG><a name="[1e6]"></a>uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char)</STRONG> (Thumb, 106 bytes, Stack size 88 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher4sendERKNS_5FrameENS_13MonotonicTimeES4_NS_10CanTxQueue3QosEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::operator !=(uavcan::NodeID) const
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::compile(uavcan::CanFrame&) const
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::CanFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const
</UL>

<P><STRONG><a name="[1e9]"></a>uavcan::Dispatcher::spin(uavcan::MonotonicTime)</STRONG> (Thumb, 154 bytes, Stack size 88 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher4spinENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = uavcan::Dispatcher::spin(uavcan::MonotonicTime) &rArr; uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanRxFrame::~CanRxFrame()
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanRxFrame::CanRxFrame()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::notifyRxFrameListener(const uavcan::CanRxFrame&, unsigned short)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1ed]"></a>uavcan::Dispatcher::cleanup(uavcan::MonotonicTime)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher7cleanupENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = uavcan::Dispatcher::cleanup(uavcan::MonotonicTime) &rArr; uavcan::Dispatcher::ListenerRegistry::cleanup(uavcan::MonotonicTime) &rArr; uavcan::TransferListener::cleanup(uavcan::MonotonicTime) &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1) &rArr; uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const &rArr; uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::cleanup(uavcan::MonotonicTime)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::cleanup(uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::pollCleanup(uavcan::MonotonicTime, unsigned)
</UL>

<P><STRONG><a name="[1a9]"></a>uavcan::Dispatcher::setNodeID(uavcan::NodeID)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan10Dispatcher9setNodeIDENS_6NodeIDE))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[6e]"></a>uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::~Subscriber()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::~Subscriber() &rArr; uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEEE)
</UL>
<P><STRONG><a name="[39e]"></a>uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::~Subscriber__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEED1Ev), UNUSED)

<P><STRONG><a name="[86]"></a>uavcan::ParamServer::handleGetSet(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN6uavcan11ParamServer12handleGetSetERKNS_8protocol5param7GetSet_8Request_ILi0EEERNS3_9Response_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::ParamServer::handleGetSet(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::empty() const
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>uavcan::ParamServer::handleExecuteOpcode(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, scu_libuavcan.o(i._ZN6uavcan11ParamServer19handleExecuteOpcodeERKNS_8protocol5param14ExecuteOpcode_8Request_ILi0EEERNS3_9Response_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::ParamServer::handleExecuteOpcode(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[1b7]"></a>uavcan::ParamServer::start(uavcan::IParamManager*)</STRONG> (Thumb, 228 bytes, Stack size 64 bytes, scu_libuavcan.o(i._ZN6uavcan11ParamServer5startEPNS_13IParamManagerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = uavcan::ParamServer::start(uavcan::IParamManager*) &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[6f]"></a>uavcan::ParamServer::~ParamServer()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan11ParamServerD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::ParamServer::~ParamServer() &rArr; uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
</UL>
<P><STRONG><a name="[39f]"></a>uavcan::ParamServer::~ParamServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan11ParamServerD1Ev), UNUSED)

<P><STRONG><a name="[301]"></a>uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_scalar_codec.o(i._ZN6uavcan11ScalarCodec13swapByteOrderEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)64, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)48, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)32, (unsigned)4&rang;(unsigned char(&)[T2])
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)16, (unsigned)2&rang;(unsigned char(&)[T2])
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[1f6]"></a>uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, uc_scalar_codec.o(i._ZN6uavcan11ScalarCodec15decodeBytesImplEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::read(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[1f8]"></a>uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uc_scalar_codec.o(i._ZN6uavcan11ScalarCodec15encodeBytesImplEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::write(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)3, unsigned char&rang;(T2)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)2, unsigned char&rang;(T2)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)6, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)5, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)1, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(bool, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)16, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned short, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[201]"></a>uavcan::CanIOManager::callSelect(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager10callSelectERNS_14CanSelectMasksERA3_PKNS_8CanFrameENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::CanIOManager::callSelect(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[1fc]"></a>uavcan::CanIOManager::sendToIface(unsigned char, const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager11sendToIfaceEhRKNS_8CanFrameENS_13MonotonicTimeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::CanIOManager::sendToIface(unsigned char, const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendFromTxQueue(unsigned char)
</UL>

<P><STRONG><a name="[1fa]"></a>uavcan::CanIOManager::sendFromTxQueue(unsigned char)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager15sendFromTxQueueEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;()
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendToIface(unsigned char, const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::peek()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[72]"></a>uavcan::CanIOManager::IfaceFrameCounters::IfaceFrameCounters()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager18IfaceFrameCountersC1Ev))
<BR>[Address Reference Count : 1]<UL><LI> uc_can_io.o(i._ZN6uavcan12CanIOManagerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockEj)
</UL>
<P><STRONG><a name="[3a0]"></a>uavcan::CanIOManager::IfaceFrameCounters::IfaceFrameCounters__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager18IfaceFrameCountersC1Ev), UNUSED)

<P><STRONG><a name="[1e8]"></a>uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)</STRONG> (Thumb, 416 bytes, Stack size 96 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager4sendERKNS_8CanFrameENS_13MonotonicTimeES4_hNS_10CanTxQueue3QosEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator &rang;=(const uavcan::MonotonicTime&) const
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::makePendingTxMask() const
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::getTopPriorityPendingFrame() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::topPriorityHigherOrEqual(const uavcan::CanFrame&) const
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendFromTxQueue(unsigned char)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendToIface(unsigned char, const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::callSelect(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[1ea]"></a>uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)</STRONG> (Thumb, 288 bytes, Stack size 96 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManager7receiveERNS_10CanRxFrameENS_13MonotonicTimeERt))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator &rang;=(const uavcan::MonotonicTime&) const
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::makePendingTxMask() const
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::getTopPriorityPendingFrame() const
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendFromTxQueue(unsigned char)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::callSelect(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[203]"></a>uavcan::CanIOManager::CanIOManager(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned)</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManagerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = uavcan::CanIOManager::CanIOManager(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::Scheduler(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3a1]"></a>uavcan::CanIOManager::CanIOManager__sub_object(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, uc_can_io.o(i._ZN6uavcan12CanIOManagerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockEj), UNUSED)

<P><STRONG><a name="[28a]"></a>uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)</STRONG> (Thumb, 128 bytes, Stack size 36 bytes, uc_bit_array_copy.o(i._ZN6uavcan12bitarrayCopyEPKhjjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::write(const unsigned char*, unsigned)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::read(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[75]"></a>uavcan::MonotonicTime::~MonotonicTime()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_stm32_clock.o(i._ZN6uavcan13MonotonicTimeD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_clock.o(i.__sti___18_uc_stm32_clock_cpp_87095aac)
</UL>
<P><STRONG><a name="[3a2]"></a>uavcan::MonotonicTime::~MonotonicTime__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_stm32_clock.o(i._ZN6uavcan13MonotonicTimeD1Ev), UNUSED)

<P><STRONG><a name="[aa]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[3a3]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev), UNUSED)

<P><STRONG><a name="[ac]"></a>uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[3a4]"></a>uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEED1Ev), UNUSED)

<P><STRONG><a name="[ae]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[3a5]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev), UNUSED)

<P><STRONG><a name="[b0]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[3a6]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEED1Ev), UNUSED)

<P><STRONG><a name="[b2]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::~ParamServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[3a7]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEED1Ev), UNUSED)

<P><STRONG><a name="[b4]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::~ParamServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[3a8]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEED1Ev), UNUSED)

<P><STRONG><a name="[205]"></a>uavcan::TransferSender::getDefaultMaxTransferInterval()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan14TransferSender29getDefaultMaxTransferIntervalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::TransferSender::getDefaultMaxTransferInterval() &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::Logger(uavcan::INode&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
</UL>

<P><STRONG><a name="[206]"></a>uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uc_transfer_sender.o(i._ZN6uavcan14TransferSender4initERKNS_18DataTypeDescriptorENS_10CanTxQueue3QosE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>

<P><STRONG><a name="[208]"></a>uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration)</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, uc_scheduler.o(i._ZN6uavcan15DeadlineHandler14startWithDelayENS_17MonotonicDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration) &rArr; uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime) &rArr; uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::getMonotonicTime() const
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimerBase::startPeriodic(uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[20a]"></a>uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uc_scheduler.o(i._ZN6uavcan15DeadlineHandler17startWithDeadlineENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime) &rArr; uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::stop()
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime)
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[20b]"></a>uavcan::DeadlineHandler::stop()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_scheduler.o(i._ZN6uavcan15DeadlineHandler4stopEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::DeadlineHandler::stop() &rArr; uavcan::DeadlineScheduler::remove(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::remove(uavcan::DeadlineHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimerBase::startPeriodic(uavcan::MonotonicDuration)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::~DeadlineHandler__sub_object()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[3a9]"></a>uavcan::DeadlineHandler::~DeadlineHandler()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan15DeadlineHandlerD2Ev), UNUSED)

<P><STRONG><a name="[b6]"></a>uavcan::DeadlineHandler::~DeadlineHandler__sub_object()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan15DeadlineHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::DeadlineHandler::~DeadlineHandler__sub_object() &rArr; uavcan::DeadlineHandler::stop() &rArr; uavcan::DeadlineScheduler::remove(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::stop()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan15DeadlineHandlerE)
</UL>
<P><STRONG><a name="[357]"></a>uavcan::IEEE754Converter::halfToNativeIeee(unsigned short)</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, uc_float_spec.o(i._ZN6uavcan16IEEE754Converter16halfToNativeIeeeEt))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[b9]"></a>uavcan::IncomingTransfer::write(unsigned, const unsigned char*, unsigned)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer5writeEjPKhj))
<BR>[Address Reference Count : 3]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
<LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
<LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[ba]"></a>uavcan::IncomingTransfer::release()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan16IncomingTransfer7releaseEv))
<BR>[Address Reference Count : 2]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
<LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[279]"></a>uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, uc_transfer_listener.o(i._ZN6uavcan16IncomingTransferC2ENS_13MonotonicTimeENS_7UtcTimeENS_16TransferPriorityENS_12TransferTypeENS_10TransferIDENS_6NodeIDEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[3aa]"></a>uavcan::IncomingTransfer::~IncomingTransfer()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan16IncomingTransferD2Ev), UNUSED)

<P><STRONG><a name="[b8]"></a>uavcan::IncomingTransfer::~IncomingTransfer__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan16IncomingTransferD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleAnonymousTransferReception(const uavcan::RxFrame&)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
</UL>
<P><STRONG><a name="[bd]"></a>uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferListener11handleFrameERKNS_7RxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = uavcan::TransferListener::handleFrame(const uavcan::RxFrame&) &rArr; uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::updateTransferTimings() &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::findKey(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::isBroadcast() const
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::TransferReceiver()
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleAnonymousTransferReception(const uavcan::RxFrame&)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16TransferListenerE)
<LI> uc_node_status_provider.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[211]"></a>uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)</STRONG> (Thumb, 194 bytes, Stack size 88 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferListener15handleReceptionERNS_16TransferReceiverERKNS_7RxFrameERNS_22TransferBufferAccessorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::updateTransferTimings() &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferAccessor::access()
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IncomingTransfer::~IncomingTransfer__sub_object()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::yieldErrorCount()
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::checkPayloadCrc(unsigned short, const uavcan::ITransferBuffer&) const
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)
</UL>

<P><STRONG><a name="[213]"></a>uavcan::TransferListener::handleAnonymousTransferReception(const uavcan::RxFrame&)</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferListener32handleAnonymousTransferReceptionERKNS_7RxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::TransferListener::handleAnonymousTransferReception(const uavcan::RxFrame&) &rArr; uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&) &rArr; uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IncomingTransfer::~IncomingTransfer__sub_object()
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)
</UL>

<P><STRONG><a name="[1e0]"></a>uavcan::TransferListener::cleanup(uavcan::MonotonicTime)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferListener7cleanupENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = uavcan::TransferListener::cleanup(uavcan::MonotonicTime) &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1) &rArr; uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const &rArr; uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::cleanup(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[21c]"></a>uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, scu_libuavcan.o(i._ZN6uavcan16TransferListenerC2ERNS_19TransferPerfCounterERKNS_18DataTypeDescriptorEtRNS_14IPoolAllocatorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
</UL>

<P><STRONG><a name="[3ab]"></a>uavcan::TransferListener::~TransferListener()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferListenerD2Ev), UNUSED)

<P><STRONG><a name="[bc]"></a>uavcan::TransferListener::~TransferListener__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferListenerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::~TransferBufferManager()
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16TransferListenerE)
</UL>
<P><STRONG><a name="[226]"></a>uavcan::TransferReceiver::writePayload(const uavcan::RxFrame&, uavcan::ITransferBuffer&)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, uc_transfer_receiver.o(i._ZN6uavcan16TransferReceiver12writePayloadERKNS_7RxFrameERNS_15ITransferBufferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::TransferReceiver::writePayload(const uavcan::RxFrame&, uavcan::ITransferBuffer&)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[216]"></a>uavcan::TransferReceiver::yieldErrorCount()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uc_transfer_receiver.o(i._ZN6uavcan16TransferReceiver15yieldErrorCountEv))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[21f]"></a>uavcan::TransferReceiver::updateTransferTimings()</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, uc_transfer_receiver.o(i._ZN6uavcan16TransferReceiver21updateTransferTimingsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = uavcan::TransferReceiver::updateTransferTimings() &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::isZero() const
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[223]"></a>uavcan::TransferReceiver::prepareForNextTransfer()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uc_transfer_receiver.o(i._ZN6uavcan16TransferReceiver22prepareForNextTransferEv))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[222]"></a>uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, uc_transfer_receiver.o(i._ZN6uavcan16TransferReceiver7receiveERKNS_7RxFrameERNS_22TransferBufferAccessorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::updateTransferTimings() &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::registerError() const
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::prepareForNextTransfer()
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::updateTransferTimings()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::writePayload(const uavcan::RxFrame&, uavcan::ITransferBuffer&)
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[214]"></a>uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)</STRONG> (Thumb, 374 bytes, Stack size 128 bytes, uc_transfer_receiver.o(i._ZN6uavcan16TransferReceiver8addFrameERKNS_7RxFrameERNS_22TransferBufferAccessorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::TransferReceiver::updateTransferTimings() &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getTransferID() const
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator &lang;(const uavcan::MonotonicTime&) const
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::isZero() const
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::operator &rang;(const uavcan::MonotonicDuration&) const
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferID::operator !=(uavcan::TransferID) const
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::validate(const uavcan::RxFrame&) const
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::getIfaceSwitchDelay() const
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::registerError() const
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferID::computeForwardDistance(uavcan::TransferID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[20f]"></a>uavcan::TransferReceiver::TransferReceiver()</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferReceiverC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)
</UL>

<P><STRONG><a name="[3ac]"></a>uavcan::TransferReceiver::TransferReceiver__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan16TransferReceiverC1Ev), UNUSED)

<P><STRONG><a name="[200]"></a>uavcan::handleFatalError(const char*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_error.o(i._ZN6uavcan16handleFatalErrorEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___27_uc_node_status_provider_cpp_54b78f91
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::LazyConstructor&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder&rang;::construct&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&&rang;(uavcan::ParameterType&lang;T1&rang;::Type, uavcan::ParameterType&lang;T2&rang;::Type, uavcan::ParameterType&lang;T3&rang;::Type, uavcan::ParameterType&lang;T4&rang;::Type)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator =(const char*)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;&)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Subscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::log(unsigned char, const char*, const char*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::CanIOManager(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[230]"></a>uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uc_data_type.o(i._ZN6uavcan17DataTypeSignature6extendES0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::mixin64(unsigned long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::DataTypeKind_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[231]"></a>uavcan::DataTypeSignature::mixin64(unsigned long long)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, uc_data_type.o(i._ZN6uavcan17DataTypeSignature7mixin64Ey))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignatureCRC::extend(unsigned long long)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignatureCRC::add(unsigned char)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
</UL>

<P><STRONG><a name="[235]"></a>uavcan::DeadlineScheduler::pollAndGetMonotonicTime(uavcan::ISystemClock&)</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, uc_scheduler.o(i._ZN6uavcan17DeadlineScheduler23pollAndGetMonotonicTimeERNS_12ISystemClockE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::DeadlineScheduler::pollAndGetMonotonicTime(uavcan::ISystemClock&)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::DeadlineHandler&rang;::remove(const uavcan::DeadlineHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[20c]"></a>uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, uc_scheduler.o(i._ZN6uavcan17DeadlineScheduler3addEPNS_15DeadlineHandlerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::DeadlineHandler&rang;::remove(const uavcan::DeadlineHandler*)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MonotonicDeadlineHandlerInsertionComparator::operator ()(const uavcan::DeadlineHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[20d]"></a>uavcan::DeadlineScheduler::remove(uavcan::DeadlineHandler*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, uc_scheduler.o(i._ZN6uavcan17DeadlineScheduler6removeEPNS_15DeadlineHandlerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::DeadlineScheduler::remove(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::DeadlineHandler&rang;::remove(const uavcan::DeadlineHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::stop()
</UL>

<P><STRONG><a name="[bf]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_node_status_provider.o(i._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_node_status_provider.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3ad]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_node_status_provider.o(i._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[c2]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3ae]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[c5]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3af]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[c8]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3b0]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[cb]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3b1]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[ce]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3b2]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[d1]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3b3]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[d4]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder() &rArr; uavcan::TransferListener::~TransferListener__sub_object() &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3b4]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::~TransferForwarder__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderD1Ev), UNUSED)

<P><STRONG><a name="[76]"></a>uavcan::MonotonicDuration::~MonotonicDuration()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_outgoing_transfer_registry.o(i._ZN6uavcan17MonotonicDurationD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> uc_outgoing_transfer_registry.o(i.__sti___33_uc_outgoing_transfer_registry_cpp_e869a750)
</UL>
<P><STRONG><a name="[3b5]"></a>uavcan::MonotonicDuration::~MonotonicDuration__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_outgoing_transfer_registry.o(i._ZN6uavcan17MonotonicDurationD1Ev), UNUSED)

<P><STRONG><a name="[32f]"></a>uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, freertos.o(i._ZN6uavcan18DataTypeDescriptorC1ENS_12DataTypeKindENS_10DataTypeIDERKNS_17DataTypeSignatureEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[3b6]"></a>uavcan::DataTypeDescriptor::DataTypeDescriptor__sub_object(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, freertos.o(i._ZN6uavcan18DataTypeDescriptorC1ENS_12DataTypeKindENS_10DataTypeIDERKNS_17DataTypeSignatureEPKc), UNUSED)

<P><STRONG><a name="[238]"></a>uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider15startAndPublishENS_16TransferPriorityE))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::publish() &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::isPassiveMode() const
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::isNodeInfoInitialized() const
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::publish()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::stop()
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[d7]"></a>uavcan::NodeStatusProvider::handleTimerEvent(const uavcan::TimerEvent&)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider16handleTimerEventERKNS_10TimerEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = uavcan::NodeStatusProvider::handleTimerEvent(const uavcan::TimerEvent&) &rArr; uavcan::NodeStatusProvider::publish() &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::isPassiveMode() const
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::publish()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_node_status_provider.o(.constdata__ZTVN6uavcan18NodeStatusProviderE)
</UL>
<P><STRONG><a name="[1ad]"></a>uavcan::NodeStatusProvider::setHardwareVersion(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&)</STRONG> (Thumb, 46 bytes, Stack size 288 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider18setHardwareVersionERKNS_8protocol16HardwareVersion_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = uavcan::NodeStatusProvider::setHardwareVersion(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) &rArr; uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const &rArr; uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::at(unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[1ac]"></a>uavcan::NodeStatusProvider::setSoftwareVersion(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider18setSoftwareVersionERKNS_8protocol16SoftwareVersion_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::NodeStatusProvider::setSoftwareVersion(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::SoftwareVersion_()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[95]"></a>uavcan::NodeStatusProvider::handleGetNodeInfoRequest(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider24handleGetNodeInfoRequestERKNS_8protocol12GetNodeInfo_8Request_ILi0EEERNS2_9Response_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::NodeStatusProvider::handleGetNodeInfoRequest(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_node_status_provider.o(.constdata)
</UL>
<P><STRONG><a name="[23f]"></a>uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)</STRONG> (Thumb, 166 bytes, Stack size 64 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider26setStatusPublicationPeriodENS_17MonotonicDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration) &rArr; uavcan::TimerBase::startPeriodic(uavcan::MonotonicDuration) &rArr; uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration) &rArr; uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime) &rArr; uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimerBase::startPeriodic(uavcan::MonotonicDuration)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromUSec(long long)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[23b]"></a>uavcan::NodeStatusProvider::publish()</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider7publishEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = uavcan::NodeStatusProvider::publish() &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromUSec(long long)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::handleTimerEvent(const uavcan::TimerEvent&)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[1bf]"></a>uavcan::NodeStatusProvider::setMode(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider7setModeEh))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::start()
</UL>

<P><STRONG><a name="[1ab]"></a>uavcan::NodeStatusProvider::setName(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uc_node_status_provider.o(i._ZN6uavcan18NodeStatusProvider7setNameERKNS_5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj80EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::NodeStatusProvider::setName(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::empty() const
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[247]"></a>uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, scu_libuavcan.o(i._ZN6uavcan18NodeStatusProviderC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&) &rArr; uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromUSec(long long)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getMonotonicTime() const
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::Response_()
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3b7]"></a>uavcan::NodeStatusProvider::NodeStatusProvider__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(i._ZN6uavcan18NodeStatusProviderC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[24b]"></a>uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 340 bytes, Stack size 88 bytes, scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlave10processMsgERKNS_21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromUSec(long long)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::operator ==(uavcan::NodeID) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferID::computeForwardDistance(uavcan::TransferID) const
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getMonotonicTimestamp() const
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getIfaceIndex() const
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getSrcNodeID() const
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::handleGlobalTimeSync(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[24e]"></a>uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlave13updateFromMsgERKNS_21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getMonotonicTimestamp() const
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getIfaceIndex() const
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getSrcNodeID() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[94]"></a>uavcan::GlobalTimeSyncSlave::handleGlobalTimeSync(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlave20handleGlobalTimeSyncERKNS_21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = uavcan::GlobalTimeSyncSlave::handleGlobalTimeSync(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>uavcan::GlobalTimeSyncSlave::~GlobalTimeSyncSlave()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlaveD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::GlobalTimeSyncSlave::~GlobalTimeSyncSlave() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
</UL>
<P><STRONG><a name="[3b8]"></a>uavcan::GlobalTimeSyncSlave::~GlobalTimeSyncSlave__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan19GlobalTimeSyncSlaveD1Ev), UNUSED)

<P><STRONG><a name="[307]"></a>uavcan::TransferPerfCounter::addError()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan19TransferPerfCounter8addErrorEv))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[299]"></a>uavcan::CanIfacePerfCounters::CanIfacePerfCounters()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_can_io.o(i._ZN6uavcan20CanIfacePerfCountersC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const
</UL>

<P><STRONG><a name="[3b9]"></a>uavcan::CanIfacePerfCounters::CanIfacePerfCounters__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_can_io.o(i._ZN6uavcan20CanIfacePerfCountersC1Ev), UNUSED)

<P><STRONG><a name="[92]"></a>uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN6uavcan20DataTypeInfoProvider28handleGetDataTypeInfoRequestERKNS_8protocol16GetDataTypeInfo_8Request_ILi0EEERNS2_9Response_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&) &rArr; uavcan::GlobalDataTypeRegistry::find(const char*) const &rArr; uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(const char*) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, uavcan::DataTypeID) const
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::hasServer(uavcan::DataTypeID) const
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::hasSubscriber(uavcan::DataTypeID) const
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::hasPublisher(uavcan::DataTypeID) const
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[259]"></a>uavcan::DataTypeInfoProvider::start()</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN6uavcan20DataTypeInfoProvider5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = uavcan::DataTypeInfoProvider::start() &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[234]"></a>uavcan::DataTypeSignatureCRC::add(unsigned char)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, uc_data_type.o(i._ZN6uavcan20DataTypeSignatureCRC3addEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::mixin64(unsigned long long)
</UL>

<P><STRONG><a name="[232]"></a>uavcan::DataTypeSignatureCRC::extend(unsigned long long)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_data_type.o(i._ZN6uavcan20DataTypeSignatureCRC6extendEy))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::mixin64(unsigned long long)
</UL>

<P><STRONG><a name="[244]"></a>uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, uc_generic_publisher.o(i._ZN6uavcan20GenericPublisherBase12setTxTimeoutENS_17MonotonicDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::Logger(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[25d]"></a>uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, uc_generic_publisher.o(i._ZN6uavcan20GenericPublisherBase14genericPublishERKNS_24StaticTransferBufferImplENS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::getTxDeadline() const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[261]"></a>uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, uc_generic_publisher.o(i._ZN6uavcan20GenericPublisherBase6doInitENS_12DataTypeKindEPKcNS_10CanTxQueue3QosE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[248]"></a>uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN6uavcan20GenericPublisherBaseC1ERNS_5INodeENS_17MonotonicDurationES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::Logger(uavcan::INode&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
</UL>

<P><STRONG><a name="[3ba]"></a>uavcan::GenericPublisherBase::GenericPublisherBase__sub_object(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, scu_libuavcan.o(i._ZN6uavcan20GenericPublisherBaseC1ERNS_5INodeENS_17MonotonicDurationES3_), UNUSED)

<P><STRONG><a name="[d9]"></a>uavcan::LimitedPoolAllocator::deallocate(const void*)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uc_dynamic_memory.o(i._ZN6uavcan20LimitedPoolAllocator10deallocateEPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::LimitedPoolAllocator::deallocate(const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_dynamic_memory.o(.constdata__ZTVN6uavcan20LimitedPoolAllocatorE)
</UL>
<P><STRONG><a name="[d8]"></a>uavcan::LimitedPoolAllocator::allocate(unsigned)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uc_dynamic_memory.o(i._ZN6uavcan20LimitedPoolAllocator8allocateEj))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_dynamic_memory.o(.constdata__ZTVN6uavcan20LimitedPoolAllocatorE)
</UL>
<P><STRONG><a name="[1b4]"></a>uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, uc_generic_subscriber.o(i._ZN6uavcan21GenericSubscriberBase12genericStartEPNS_16TransferListenerEMNS_10DispatcherEFbS2_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*)) &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::start()
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[1b1]"></a>uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uc_generic_subscriber.o(i._ZN6uavcan21GenericSubscriberBase4stopEPNS_16TransferListenerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::unregisterServiceRequestListener(uavcan::TransferListener*)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::unregisterMessageListener(uavcan::TransferListener*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::start()
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
</UL>

<P><STRONG><a name="[1af]"></a>uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan21GenericSubscriberBaseC1ERNS_5INodeE))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
</UL>

<P><STRONG><a name="[3bb]"></a>uavcan::GenericSubscriberBase::GenericSubscriberBase__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan21GenericSubscriberBaseC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[224]"></a>uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uc_transfer_buffer.o(i._ZN6uavcan21TransferBufferManager6accessERKNS_24TransferBufferManagerKeyE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferAccessor::access()
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[225]"></a>uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan21TransferBufferManager6createERKNS_24TransferBufferManagerKeyE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManagerEntry::Block::destroy(uavcan::TransferBufferManagerEntry::Block*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry&rang;::remove(const uavcan::TransferBufferManagerEntry*)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::instantiate(uavcan::IPoolAllocator&, unsigned short)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[21a]"></a>uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan21TransferBufferManager6removeERKNS_24TransferBufferManagerKeyE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry&rang;::remove(const uavcan::TransferBufferManagerEntry*)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MultiFrameIncomingTransfer::release()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[265]"></a>uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uc_transfer_buffer.o(i._ZN6uavcan21TransferBufferManager9findFirstERKNS_24TransferBufferManagerKeyE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[21e]"></a>uavcan::TransferBufferManager::~TransferBufferManager()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan21TransferBufferManagerD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::TransferBufferManager::~TransferBufferManager() &rArr; uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry&rang;::remove(const uavcan::TransferBufferManagerEntry*)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>

<P><STRONG><a name="[3bc]"></a>uavcan::TransferBufferManager::~TransferBufferManager__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan21TransferBufferManagerD1Ev), UNUSED)

<P><STRONG><a name="[26a]"></a>uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, uc_global_data_type_registry.o(i._ZN6uavcan22GlobalDataTypeRegistry10registImplEPNS0_5EntryE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::GlobalDataTypeRegistry::Entry&rang;::remove(const uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::EntryInsertionComparator::operator ()(const uavcan::GlobalDataTypeRegistry::Entry*) const
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::selectList(uavcan::DataTypeKind) const
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::isValid() const
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[32d]"></a>uavcan::GlobalDataTypeRegistry::Entry::Entry()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, freertos.o(i._ZN6uavcan22GlobalDataTypeRegistry5EntryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::GlobalDataTypeRegistry::Entry::Entry()
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[3bd]"></a>uavcan::GlobalDataTypeRegistry::Entry::Entry__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, freertos.o(i._ZN6uavcan22GlobalDataTypeRegistry5EntryC1Ev), UNUSED)

<P><STRONG><a name="[263]"></a>uavcan::GlobalDataTypeRegistry::freeze()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_global_data_type_registry.o(i._ZN6uavcan22GlobalDataTypeRegistry6freezeEv))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
</UL>

<P><STRONG><a name="[270]"></a>uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, uc_global_data_type_registry.o(i._ZN6uavcan22GlobalDataTypeRegistry6removeEPNS0_5EntryE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::GlobalDataTypeRegistry::Entry&rang;::remove(const uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::selectList(uavcan::DataTypeKind) const
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[252]"></a>uavcan::GlobalDataTypeRegistry::instance()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, uc_global_data_type_registry.o(i._ZN6uavcan22GlobalDataTypeRegistry8instanceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::GlobalDataTypeRegistry::instance()
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___27_uc_node_status_provider_cpp_54b78f91
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[217]"></a>uavcan::TransferBufferAccessor::access()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan22TransferBufferAccessor6accessEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::TransferBufferAccessor::access() &rArr; uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MultiFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[272]"></a>uavcan::OutgoingTransferRegistry::accessOrCreate(const uavcan::OutgoingTransferRegistryKey&, uavcan::MonotonicTime)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, uc_outgoing_transfer_registry.o(i._ZN6uavcan24OutgoingTransferRegistry14accessOrCreateERKNS_27OutgoingTransferRegistryKeyENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = uavcan::OutgoingTransferRegistry::accessOrCreate(const uavcan::OutgoingTransferRegistryKey&, uavcan::MonotonicTime) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::findKey(const uavcan::OutgoingTransferRegistryKey&)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::Value::Value()
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const
</UL>

<P><STRONG><a name="[274]"></a>uavcan::OutgoingTransferRegistry::Value::Value()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_outgoing_transfer_registry.o(i._ZN6uavcan24OutgoingTransferRegistry5ValueC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::accessOrCreate(const uavcan::OutgoingTransferRegistryKey&, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[3be]"></a>uavcan::OutgoingTransferRegistry::Value::Value__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_outgoing_transfer_registry.o(i._ZN6uavcan24OutgoingTransferRegistry5ValueC1Ev), UNUSED)

<P><STRONG><a name="[1ee]"></a>uavcan::OutgoingTransferRegistry::cleanup(uavcan::MonotonicTime)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uc_outgoing_transfer_registry.o(i._ZN6uavcan24OutgoingTransferRegistry7cleanupENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::OutgoingTransferRegistry::cleanup(uavcan::MonotonicTime) &rArr; void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::cleanup(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[dc]"></a>uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, uc_transfer_buffer.o(i._ZN6uavcan24StaticTransferBufferImpl5writeEjPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& uavcan::max&lang;unsigned short&rang;(const T1&, const T1&)
</UL>
<BR>[Address Reference Count : 8]<UL><LI> uc_transfer_buffer.o(.constdata__ZTVN6uavcan24StaticTransferBufferImplE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt123EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt377EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt93EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt1EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt73EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt371EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt7EEE)
</UL>
<P><STRONG><a name="[314]"></a>uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan24StaticTransferBufferImplC1EPht))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[3bf]"></a>uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl__sub_object(unsigned char*, unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan24StaticTransferBufferImplC1EPht), UNUSED)

<P><STRONG><a name="[333]"></a>uavcan::TransferBufferManagerKey::TransferBufferManagerKey()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan24TransferBufferManagerKeyC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[3c0]"></a>uavcan::TransferBufferManagerKey::TransferBufferManagerKey__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan24TransferBufferManagerKeyC1Ev), UNUSED)

<P><STRONG><a name="[de]"></a>uavcan::MultiFrameIncomingTransfer::release()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan26MultiFrameIncomingTransfer7releaseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::MultiFrameIncomingTransfer::release() &rArr; uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[219]"></a>uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, uc_transfer_listener.o(i._ZN6uavcan26MultiFrameIncomingTransferC1ENS_13MonotonicTimeENS_7UtcTimeERKNS_7RxFrameERNS_22TransferBufferAccessorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&) &rArr; uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getTransferID() const
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getPriority() const
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[3c1]"></a>uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, uc_transfer_listener.o(i._ZN6uavcan26MultiFrameIncomingTransferC1ENS_13MonotonicTimeENS_7UtcTimeERKNS_7RxFrameERNS_22TransferBufferAccessorE), UNUSED)

<P><STRONG><a name="[266]"></a>uavcan::TransferBufferManagerEntry::instantiate(uavcan::IPoolAllocator&, unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry11instantiateERNS_14IPoolAllocatorEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::TransferBufferManagerEntry::instantiate(uavcan::IPoolAllocator&, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[27d]"></a>uavcan::TransferBufferManagerEntry::Block::instantiate(uavcan::IPoolAllocator&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5Block11instantiateERNS_14IPoolAllocatorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::TransferBufferManagerEntry::Block::instantiate(uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[2a6]"></a>uavcan::TransferBufferManagerEntry::Block::read(unsigned char*&, unsigned, unsigned&, unsigned&)</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5Block4readERPhjRjS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uavcan::TransferBufferManagerEntry::Block::read(unsigned char*&, unsigned, unsigned&, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::read(unsigned, unsigned char*, unsigned) const
</UL>

<P><STRONG><a name="[27c]"></a>uavcan::TransferBufferManagerEntry::Block::write(const unsigned char*&, unsigned, unsigned&, unsigned&)</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5Block5writeERPKhjRjS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uavcan::TransferBufferManagerEntry::Block::write(const unsigned char*&, unsigned, unsigned&, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[27b]"></a>uavcan::TransferBufferManagerEntry::Block::destroy(uavcan::TransferBufferManagerEntry::Block*&, uavcan::IPoolAllocator&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5Block7destroyERPS1_RNS_14IPoolAllocatorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::TransferBufferManagerEntry::Block::destroy(uavcan::TransferBufferManagerEntry::Block*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[268]"></a>uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5resetERKNS_24TransferBufferManagerKeyE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManagerEntry::Block::destroy(uavcan::TransferBufferManagerEntry::Block*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry::Block&rang;::remove(const uavcan::TransferBufferManagerEntry::Block*)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::Block::destroy(uavcan::TransferBufferManagerEntry::Block*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::~TransferBufferManagerEntry()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[e1]"></a>uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned)</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry5writeEjPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned) &rArr; uavcan::TransferBufferManagerEntry::Block::write(const unsigned char*&, unsigned, unsigned&, unsigned&)
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& uavcan::max&lang;unsigned short&rang;(const T1&, const T1&)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry::Block&rang;::remove(const uavcan::TransferBufferManagerEntry::Block*)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::Block::write(const unsigned char*&, unsigned, unsigned&, unsigned&)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::Block::instantiate(uavcan::IPoolAllocator&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_buffer.o(.constdata__ZTVN6uavcan26TransferBufferManagerEntryE)
</UL>
<P><STRONG><a name="[269]"></a>uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntry7destroyERPS0_RNS_14IPoolAllocatorE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::TransferBufferManagerEntry::destroy(uavcan::TransferBufferManagerEntry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::~TransferBufferManager()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[df]"></a>uavcan::TransferBufferManagerEntry::~TransferBufferManagerEntry()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntryD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::TransferBufferManagerEntry::~TransferBufferManagerEntry() &rArr; uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManagerEntry::Block::destroy(uavcan::TransferBufferManagerEntry::Block*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_buffer.o(.constdata__ZTVN6uavcan26TransferBufferManagerEntryE)
</UL>
<P><STRONG><a name="[3c2]"></a>uavcan::TransferBufferManagerEntry::~TransferBufferManagerEntry__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uc_transfer_buffer.o(i._ZN6uavcan26TransferBufferManagerEntryD1Ev), UNUSED)

<P><STRONG><a name="[2a4]"></a>uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan27OutgoingTransferRegistryKeyC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[3c3]"></a>uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan27OutgoingTransferRegistryKeyC1Ev), UNUSED)

<P><STRONG><a name="[215]"></a>uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&)</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, uc_transfer_listener.o(i._ZN6uavcan27SingleFrameIncomingTransferC1ERKNS_7RxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&) &rArr; uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getTransferID() const
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getPriority() const
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IncomingTransfer::IncomingTransfer__sub_object(uavcan::MonotonicTime, uavcan::UtcTime, uavcan::TransferPriority, uavcan::TransferType, uavcan::TransferID, uavcan::NodeID, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleAnonymousTransferReception(const uavcan::RxFrame&)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[3c4]"></a>uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer__sub_object(const uavcan::RxFrame&)</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, uc_transfer_listener.o(i._ZN6uavcan27SingleFrameIncomingTransferC1ERKNS_7RxFrameE), UNUSED)

<P><STRONG><a name="[1e2]"></a>uavcan::LoopbackFrameListenerRegistry::invokeListeners(uavcan::RxFrame&)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uc_dispatcher.o(i._ZN6uavcan29LoopbackFrameListenerRegistry15invokeListenersERNS_7RxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::LoopbackFrameListenerRegistry::invokeListeners(uavcan::RxFrame&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[7f]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::~KVPair()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE7compactEv)
</UL>
<P><STRONG><a name="[3c5]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::~KVPair__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairD1Ev), UNUSED)

<P><STRONG><a name="[81]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::~KVPair()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE7compactEv)
</UL>
<P><STRONG><a name="[3c6]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::~KVPair__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairD1Ev), UNUSED)

<P><STRONG><a name="[6d]"></a>uavcan::Node&lang;(unsigned)25600&rang;::~Node()</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, scu_libuavcan.o(i._ZN6uavcan4NodeILj25600EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::Node&lang;(unsigned)25600&rang;::~Node() &rArr; void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::~Response_()
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::~DeadlineHandler__sub_object()
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scu_libuavcan.o(i._ZN13scu_libuavcan18scu_libuavcan_InitEi)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
</UL>
<P><STRONG><a name="[3c7]"></a>uavcan::Node&lang;(unsigned)25600&rang;::~Node__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(i._ZN6uavcan4NodeILj25600EED1Ev), UNUSED)

<P><STRONG><a name="[280]"></a>uavcan::Frame::setPayload(const unsigned char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, uc_frame.o(i._ZN6uavcan5Frame10setPayloadEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Frame::setPayload(const unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 uavcan::copy&lang;const unsigned char*, unsigned char*&rang;(T1, T1, T2)
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const
</UL>

<P><STRONG><a name="[282]"></a>uavcan::Frame::parse(const uavcan::CanFrame&)</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, uc_frame.o(i._ZN6uavcan5Frame5parseERKNS_8CanFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::Frame::parse(const uavcan::CanFrame&) &rArr; uavcan::Frame::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 uavcan::copy&lang;const unsigned char*, unsigned char*&rang;(T1, T1, T2)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::isValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RxFrame::parse(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[255]"></a>uavcan::INode::getDispatcher()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZN6uavcan5INode13getDispatcherEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::INode::getDispatcher()
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[284]"></a>uavcan::Logger::log(unsigned char, const char*, const char*)</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, scu_libuavcan.o(i._ZN6uavcan6Logger3logEhPKcS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = uavcan::Logger::log(unsigned char, const char*, const char*) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::getExternalSinkLevel() const
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)90&rang;::validateRange(unsigned char) const
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)31&rang;::validateRange(unsigned char) const
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::registerInternalFailure(const char*)
</UL>

<P><STRONG><a name="[289]"></a>uavcan::Logger::Logger(uavcan::INode&)</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, scu_libuavcan.o(i._ZN6uavcan6LoggerC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uavcan::Logger::Logger(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3c8]"></a>uavcan::Logger::Logger__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, scu_libuavcan.o(i._ZN6uavcan6LoggerC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[1d5]"></a>uavcan::RxFrame::parse(const uavcan::CanRxFrame&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, uc_frame.o(i._ZN6uavcan7RxFrame5parseERKNS_10CanRxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::RxFrame::parse(const uavcan::CanRxFrame&) &rArr; uavcan::Frame::parse(const uavcan::CanFrame&) &rArr; uavcan::Frame::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::parse(const uavcan::CanFrame&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[1d4]"></a>uavcan::RxFrame::RxFrame()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, uc_dispatcher.o(i._ZN6uavcan7RxFrameC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::RxFrame::RxFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[3c9]"></a>uavcan::RxFrame::RxFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uc_dispatcher.o(i._ZN6uavcan7RxFrameC1Ev), UNUSED)

<P><STRONG><a name="[1d9]"></a>uavcan::RxFrame::~RxFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan7RxFrameD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleLoopbackFrame(const uavcan::CanRxFrame&)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[3ca]"></a>uavcan::RxFrame::~RxFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZN6uavcan7RxFrameD1Ev), UNUSED)

<P><STRONG><a name="[19a]"></a>uavcan::CanFrame::CanFrame()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, scu_libuavcanstm32.o(i._ZN6uavcan8CanFrameC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanRxFrame::CanRxFrame()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanRxItem::CanRxItem()
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::TxItem::TxItem()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)
</UL>

<P><STRONG><a name="[3cb]"></a>uavcan::CanFrame::CanFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcanstm32.o(i._ZN6uavcan8CanFrameC1Ev), UNUSED)

<P><STRONG><a name="[27e]"></a>uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::~Response_()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan8protocol12GetNodeInfo_9Response_ILi0EED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>

<P><STRONG><a name="[3cc]"></a>uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::~Response___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan8protocol12GetNodeInfo_9Response_ILi0EED1Ev), UNUSED)

<P><STRONG><a name="[294]"></a>uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::Tag::Type)1&rang;()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scuparammanager.o(i._ZN6uavcan8protocol5param13NumericValue_ILi0EE2toILNS3_3Tag4TypeE1EEERNS3_9TagToTypeIXT_EE11StorageTypeEv))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[292]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::Value_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)1&rang;()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scuparammanager.o(i._ZN6uavcan8protocol5param6Value_ILi0EE2toILNS3_3Tag4TypeE1EEERNS3_9TagToTypeIXT_EE11StorageTypeEv))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[291]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::Value_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)2&rang;()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, scuparammanager.o(i._ZN6uavcan8protocol5param6Value_ILi0EE2toILNS3_3Tag4TypeE2EEERNS3_9TagToTypeIXT_EE11StorageTypeEv))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[1f7]"></a>uavcan::BitStream::read(unsigned char*, unsigned)</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, uc_bit_stream.o(i._ZN6uavcan9BitStream4readEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[1f9]"></a>uavcan::BitStream::write(const unsigned char*, unsigned)</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, uc_bit_stream.o(i._ZN6uavcan9BitStream5writeEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[316]"></a>uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan9BitStreamC1ERNS_15ITransferBufferE))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[3cd]"></a>uavcan::BitStream::BitStream__sub_object(uavcan::ITransferBuffer&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZN6uavcan9BitStreamC1ERNS_15ITransferBufferE), UNUSED)

<P><STRONG><a name="[28b]"></a>uavcan::Scheduler::pollCleanup(uavcan::MonotonicTime, unsigned)</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, uc_scheduler.o(i._ZN6uavcan9Scheduler11pollCleanupENS_13MonotonicTimeEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = uavcan::Scheduler::pollCleanup(uavcan::MonotonicTime, unsigned) &rArr; uavcan::Dispatcher::cleanup(uavcan::MonotonicTime) &rArr; uavcan::Dispatcher::ListenerRegistry::cleanup(uavcan::MonotonicTime) &rArr; uavcan::TransferListener::cleanup(uavcan::MonotonicTime) &rArr; void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1) &rArr; uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const &rArr; uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::cleanup(uavcan::MonotonicTime)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1be]"></a>uavcan::Scheduler::spin(uavcan::MonotonicTime)</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, uc_scheduler.o(i._ZN6uavcan9Scheduler4spinENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = uavcan::Scheduler::spin(uavcan::MonotonicTime) &rArr; uavcan::Dispatcher::spin(uavcan::MonotonicTime) &rArr; uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::spin(uavcan::MonotonicTime)
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::computeDispatcherSpinDeadline(uavcan::MonotonicTime) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::pollCleanup(uavcan::MonotonicTime, unsigned)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::pollAndGetMonotonicTime(uavcan::ISystemClock&)
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::spin(unsigned)
</UL>

<P><STRONG><a name="[28d]"></a>uavcan::Scheduler::Scheduler(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&)</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, scu_libuavcan.o(i._ZN6uavcan9SchedulerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = uavcan::Scheduler::Scheduler(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&) &rArr; uavcan::CanIOManager::CanIOManager(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::CanIOManager(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3ce]"></a>uavcan::Scheduler::Scheduler__sub_object(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, scu_libuavcan.o(i._ZN6uavcan9SchedulerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockE), UNUSED)

<P><STRONG><a name="[242]"></a>uavcan::TimerBase::startPeriodic(uavcan::MonotonicDuration)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, uc_timer.o(i._ZN6uavcan9TimerBase13startPeriodicENS_17MonotonicDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uavcan::TimerBase::startPeriodic(uavcan::MonotonicDuration) &rArr; uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration) &rArr; uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime) &rArr; uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::stop()
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration)
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[d6]"></a>uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime)</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, uc_timer.o(i._ZN6uavcan9TimerBase14handleDeadlineENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime) &rArr; uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime) &rArr; uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::getInfinite()
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDeadline(uavcan::MonotonicTime)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uc_node_status_provider.o(.constdata__ZTVN6uavcan18NodeStatusProviderE)
<LI> uc_timer.o(.constdata__ZTVN6uavcan9TimerBaseE)
</UL>
<P><STRONG><a name="[9d]"></a>uavcan_stm32::SystemClock::getMonotonic() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_stm32_clock.o(i._ZNK12uavcan_stm3211SystemClock12getMonotonicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan_stm32::SystemClock::getMonotonic() const &rArr; uavcan_stm32::clock::getMonotonic()
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getMonotonic()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_clock.o(.constdata__ZTVN12uavcan_stm3211SystemClockE)
</UL>
<P><STRONG><a name="[a1]"></a>uavcan_stm32::CanIface::getErrorCount() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZNK12uavcan_stm328CanIface13getErrorCountEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan_stm32::CanIface::getErrorCount() const
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.constdata__ZTVN12uavcan_stm328CanIfaceE)
</UL>
<P><STRONG><a name="[28f]"></a>uavcan_stm32::CanIface::isRxBufferEmpty() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uc_stm32_can.o(i._ZNK12uavcan_stm328CanIface15isRxBufferEmptyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan_stm32::CanIface::isRxBufferEmpty() const
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::makeSelectMasks(const uavcan::CanFrame*(&)[3]) const
</UL>

<P><STRONG><a name="[290]"></a>uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZNK12uavcan_stm328CanIface19canAcceptNewTxFrameERKN6uavcan8CanFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const &rArr; uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::makeSelectMasks(const uavcan::CanFrame*(&)[3]) const
</UL>

<P><STRONG><a name="[a3]"></a>uavcan_stm32::CanDriver::getNumIfaces() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_stm32_can.o(i._ZNK12uavcan_stm329CanDriver12getNumIfacesEv))
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.constdata__ZTVN12uavcan_stm329CanDriverE)
</UL>
<P><STRONG><a name="[1a6]"></a>uavcan_stm32::CanDriver::makeSelectMasks(const uavcan::CanFrame*(&)[3]) const</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZNK12uavcan_stm329CanDriver15makeSelectMasksERA3_PKN6uavcan8CanFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uavcan_stm32::CanDriver::makeSelectMasks(const uavcan::CanFrame*(&)[3]) const &rArr; uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const &rArr; uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::isRxBufferEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[98]"></a>ScuParamManager::readParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&) const</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, scuparammanager.o(i._ZNK15ScuParamManager14readParamValueERKN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEERNS0_8protocol5param6Value_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ScuParamManager::readParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&) const &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::Value_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)2&rang;()
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::Value_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)1&rang;()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.constdata__ZTV15ScuParamManager)
</UL>
<P><STRONG><a name="[96]"></a>ScuParamManager::getParamNameByIndex(unsigned short, uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&) const</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scuparammanager.o(i._ZNK15ScuParamManager19getParamNameByIndexEtRN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = ScuParamManager::getParamNameByIndex(unsigned short, uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&) const &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator =(const char*) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator =(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.constdata__ZTV15ScuParamManager)
</UL>
<P><STRONG><a name="[99]"></a>ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, scuparammanager.o(i._ZNK15ScuParamManager22readParamDefaultMaxMinERKN6uavcan5ArrayINS0_11IntegerSpecILj8ELNS0_10SignednessE0ELNS0_8CastModeE0EEELNS0_9ArrayModeE1ELj92EEERNS0_8protocol5param6Value_ILi0EEERNSB_13NumericValue_ILi0EEESH_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::Value_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)2&rang;()
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::Value_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)1&rang;()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType& uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::to&lang;(uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::Tag::Type)1&rang;()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.constdata__ZTV15ScuParamManager)
</UL>
<P><STRONG><a name="[1fe]"></a>uavcan::CanTxQueue::topPriorityHigherOrEqual(const uavcan::CanFrame&) const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_can_io.o(i._ZNK6uavcan10CanTxQueue24topPriorityHigherOrEqualERKNS_8CanFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uavcan::CanTxQueue::topPriorityHigherOrEqual(const uavcan::CanFrame&) const &rArr; uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[1ff]"></a>uavcan::CanTxQueue::getTopPriorityPendingFrame() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_can_io.o(i._ZNK6uavcan10CanTxQueue26getTopPriorityPendingFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[1ce]"></a>uavcan::CanTxQueue::Entry::qosHigherThan(const uavcan::CanFrame&, uavcan::CanTxQueue::Qos) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uc_can_io.o(i._ZNK6uavcan10CanTxQueue5Entry13qosHigherThanERKNS_8CanFrameENS0_3QosE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::CanTxQueue::Entry::qosHigherThan(const uavcan::CanFrame&, uavcan::CanTxQueue::Qos) const &rArr; uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[1ca]"></a>uavcan::CanTxQueue::Entry::isExpired(uavcan::MonotonicTime) const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_can_io.o(i._ZNK6uavcan10CanTxQueue5Entry9isExpiredENS_13MonotonicTimeE))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::peek()
</UL>

<P><STRONG><a name="[1da]"></a>uavcan::DataTypeID::operator ==(uavcan::DataTypeID) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uc_data_type.o(i._ZNK6uavcan10DataTypeIDeqES0_))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::handleFrame(const uavcan::RxFrame&)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, uavcan::DataTypeID) const
</UL>

<P><STRONG><a name="[257]"></a>uavcan::Dispatcher::hasPublisher(uavcan::DataTypeID) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZNK6uavcan10Dispatcher12hasPublisherENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::Dispatcher::hasPublisher(uavcan::DataTypeID) const &rArr; uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[256]"></a>uavcan::Dispatcher::hasSubscriber(uavcan::DataTypeID) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZNK6uavcan10Dispatcher13hasSubscriberENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::Dispatcher::hasSubscriber(uavcan::DataTypeID) const &rArr; uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[1dd]"></a>uavcan::Dispatcher::ListenerRegistry::DataTypeIDInsertionComparator::operator ()(const uavcan::TransferListener*) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZNK6uavcan10Dispatcher16ListenerRegistry29DataTypeIDInsertionComparatorclEPKNS_16TransferListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>

<P><STRONG><a name="[296]"></a>uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, uc_dispatcher.o(i._ZNK6uavcan10Dispatcher16ListenerRegistry6existsENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::operator ==(uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::hasServer(uavcan::DataTypeID) const
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::hasSubscriber(uavcan::DataTypeID) const
</UL>

<P><STRONG><a name="[258]"></a>uavcan::Dispatcher::hasServer(uavcan::DataTypeID) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZNK6uavcan10Dispatcher9hasServerENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::Dispatcher::hasServer(uavcan::DataTypeID) const &rArr; uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::exists(uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[22b]"></a>uavcan::TransferID::computeForwardDistance(uavcan::TransferID) const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_transfer.o(i._ZNK6uavcan10TransferID22computeForwardDistanceES0_))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[22e]"></a>uavcan::TransferID::operator !=(uavcan::TransferID) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_transfer_receiver.o(i._ZNK6uavcan10TransferIDneES0_))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::validate(const uavcan::RxFrame&) const
</UL>

<P><STRONG><a name="[1fd]"></a>uavcan::CanIOManager::makePendingTxMask() const</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, uc_can_io.o(i._ZNK6uavcan12CanIOManager17makePendingTxMaskEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::CanIOManager::makePendingTxMask() const &rArr; uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[298]"></a>uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, uc_can_io.o(i._ZNK6uavcan12CanIOManager20getIfacePerfCountersEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const &rArr; uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIfacePerfCounters::CanIfacePerfCounters()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[29b]"></a>uavcan::TransferSender::registerError() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_transfer_sender.o(i._ZNK6uavcan14TransferSender13registerErrorEv))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const
</UL>

<P><STRONG><a name="[260]"></a>uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const</STRONG> (Thumb, 184 bytes, Stack size 96 bytes, uc_transfer_sender.o(i._ZNK6uavcan14TransferSender4sendEPKhjNS_13MonotonicTimeES3_NS_12TransferTypeENS_6NodeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::accessOrCreate(const uavcan::OutgoingTransferRegistryKey&, uavcan::MonotonicTime)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[25f]"></a>uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const</STRONG> (Thumb, 478 bytes, Stack size 96 bytes, uc_transfer_sender.o(i._ZNK6uavcan14TransferSender4sendEPKhjNS_13MonotonicTimeES3_NS_12TransferTypeENS_6NodeIDENS_10TransferIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::setPayload(const unsigned char*, unsigned)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::isUnicast() const
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::registerError() const
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[89]"></a>uavcan::IncomingTransfer::getPriority() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer11getPriorityEv))
<BR>[Address Reference Count : 2]<UL><LI> uc_node_status_provider.o(.constdata)
<LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>uavcan::IncomingTransfer::getSrcNodeID() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer12getSrcNodeIDEv))
<BR>[Address Reference Count : 2]<UL><LI> uc_node_status_provider.o(.constdata)
<LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>uavcan::IncomingTransfer::getIfaceIndex() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer13getIfaceIndexEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>uavcan::IncomingTransfer::getTransferID() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer13getTransferIDEv))
<BR>[Address Reference Count : 2]<UL><LI> uc_node_status_provider.o(.constdata)
<LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>uavcan::IncomingTransfer::getTransferType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer15getTransferTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>uavcan::IncomingTransfer::getUtcTimestamp() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer15getUtcTimestampEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>uavcan::IncomingTransfer::isAnonymousTransfer() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZNK6uavcan16IncomingTransfer19isAnonymousTransferEv))
<BR>[Address Reference Count : 2]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
<LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[8e]"></a>uavcan::IncomingTransfer::getMonotonicTimestamp() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan16IncomingTransfer21getMonotonicTimestampEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[218]"></a>uavcan::TransferListener::checkPayloadCrc(unsigned short, const uavcan::ITransferBuffer&) const</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, uc_transfer_listener.o(i._ZNK6uavcan16TransferListener15checkPayloadCrcEtRKNS_15ITransferBufferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::TransferListener::checkPayloadCrc(unsigned short, const uavcan::ITransferBuffer&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleReception(uavcan::TransferReceiver&, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[29c]"></a>uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, uc_transfer_listener.o(i._ZNK6uavcan16TransferListener25TimedOutReceiverPredicateclERKNS_24TransferBufferManagerKeyERKNS_16TransferReceiverE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const &rArr; uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[229]"></a>uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, uc_transfer_receiver.o(i._ZNK6uavcan16TransferReceiver10isTimedOutENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::operator &rang;(const uavcan::MonotonicDuration&) const
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::getTidTimeout() const
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const
</UL>

<P><STRONG><a name="[29d]"></a>uavcan::TransferReceiver::getTidTimeout() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uc_transfer_receiver.o(i._ZNK6uavcan16TransferReceiver13getTidTimeoutEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const
</UL>

<P><STRONG><a name="[227]"></a>uavcan::TransferReceiver::registerError() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_transfer_receiver.o(i._ZNK6uavcan16TransferReceiver13registerErrorEv))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::validate(const uavcan::RxFrame&) const
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::receive(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[22c]"></a>uavcan::TransferReceiver::getIfaceSwitchDelay() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, uc_transfer_receiver.o(i._ZNK6uavcan16TransferReceiver19getIfaceSwitchDelayEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::TransferReceiver::getIfaceSwitchDelay() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[22f]"></a>uavcan::TransferReceiver::validate(const uavcan::RxFrame&) const</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uc_transfer_receiver.o(i._ZNK6uavcan16TransferReceiver8validateERKNS_7RxFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::TransferReceiver::validate(const uavcan::RxFrame&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::getTransferID() const
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferID::operator !=(uavcan::TransferID) const
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::registerError() const
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[207]"></a>uavcan::DataTypeSignature::toTransferCRC() const</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, uc_data_type.o(i._ZNK6uavcan17DataTypeSignature13toTransferCRCEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::LazyConstructor&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder&rang;::construct&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&&rang;(uavcan::ParameterType&lang;T1&rang;::Type, uavcan::ParameterType&lang;T2&rang;::Type, uavcan::ParameterType&lang;T3&rang;::Type, uavcan::ParameterType&lang;T4&rang;::Type)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
</UL>

<P><STRONG><a name="[29e]"></a>uavcan::DeadlineScheduler::getEarliestDeadline() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uc_scheduler.o(i._ZNK6uavcan17DeadlineScheduler19getEarliestDeadlineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::DeadlineScheduler::getEarliestDeadline() const
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::fromUSec(unsigned long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::computeDispatcherSpinDeadline(uavcan::MonotonicTime) const
</UL>

<P><STRONG><a name="[2a0]"></a>uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, uavcan::DataTypeID) const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_data_type.o(i._ZNK6uavcan18DataTypeDescriptor5matchENS_12DataTypeKindENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, uavcan::DataTypeID) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::operator ==(uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, uavcan::DataTypeID) const
</UL>

<P><STRONG><a name="[271]"></a>uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uc_data_type.o(i._ZNK6uavcan18DataTypeDescriptor5matchENS_12DataTypeKindEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
</UL>

<P><STRONG><a name="[26b]"></a>uavcan::DataTypeDescriptor::isValid() const</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, uc_data_type.o(i._ZNK6uavcan18DataTypeDescriptor7isValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uavcan::DataTypeDescriptor::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::getMaxValueForDataTypeKind(uavcan::DataTypeKind)
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
</UL>

<P><STRONG><a name="[239]"></a>uavcan::NodeStatusProvider::isNodeInfoInitialized() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uc_node_status_provider.o(i._ZNK6uavcan18NodeStatusProvider21isNodeInfoInitializedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::NodeStatusProvider::isNodeInfoInitialized() const
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::empty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[25e]"></a>uavcan::GenericPublisherBase::getTxDeadline() const</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, uc_generic_publisher.o(i._ZNK6uavcan20GenericPublisherBase13getTxDeadlineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericPublisherBase::getTxDeadline() const &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[262]"></a>uavcan::GenericPublisherBase::isInited() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_generic_publisher.o(i._ZNK6uavcan20GenericPublisherBase8isInitedEv))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[da]"></a>uavcan::LimitedPoolAllocator::getBlockCapacity() const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, uc_dynamic_memory.o(i._ZNK6uavcan20LimitedPoolAllocator16getBlockCapacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::LimitedPoolAllocator::getBlockCapacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_dynamic_memory.o(.constdata__ZTVN6uavcan20LimitedPoolAllocatorE)
</UL>
<P><STRONG><a name="[85]"></a>uavcan::RestartRequestServer::handleRestartNode(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, scu_libuavcan.o(i._ZNK6uavcan20RestartRequestServer17handleRestartNodeERKNS_21ReceivedDataStructureINS_8protocol12RestartNode_8Request_ILi0EEEEERNS3_9Response_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::RestartRequestServer::handleRestartNode(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const &rArr; uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;::getSrcNodeID() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;::getSrcNodeID() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[26c]"></a>uavcan::GlobalDataTypeRegistry::selectList(uavcan::DataTypeKind) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uc_global_data_type_registry.o(i._ZNK6uavcan22GlobalDataTypeRegistry10selectListENS_12DataTypeKindE))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, uavcan::DataTypeID) const
</UL>

<P><STRONG><a name="[26f]"></a>uavcan::GlobalDataTypeRegistry::EntryInsertionComparator::operator ()(const uavcan::GlobalDataTypeRegistry::Entry*) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_global_data_type_registry.o(i._ZNK6uavcan22GlobalDataTypeRegistry24EntryInsertionComparatorclEPKNS0_5EntryE))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
</UL>

<P><STRONG><a name="[254]"></a>uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, uavcan::DataTypeID) const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, uc_global_data_type_registry.o(i._ZNK6uavcan22GlobalDataTypeRegistry4findENS_12DataTypeKindENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, uavcan::DataTypeID) const &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, uavcan::DataTypeID) const
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::selectList(uavcan::DataTypeKind) const
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, uavcan::DataTypeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[264]"></a>uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uc_global_data_type_registry.o(i._ZNK6uavcan22GlobalDataTypeRegistry4findENS_12DataTypeKindEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::selectList(uavcan::DataTypeKind) const
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(const char*) const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
</UL>

<P><STRONG><a name="[253]"></a>uavcan::GlobalDataTypeRegistry::find(const char*) const</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uc_global_data_type_registry.o(i._ZNK6uavcan22GlobalDataTypeRegistry4findEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::GlobalDataTypeRegistry::find(const char*) const &rArr; uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[93]"></a>uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const</STRONG> (Thumb, 170 bytes, Stack size 96 bytes, scu_libuavcan.o(i._ZNK6uavcan22TransportStatsProvider23handleGetTransportStatsERKNS_8protocol18GetTransportStats_8Request_ILi0EEERNS2_9Response_ILi0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const &rArr; uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const &rArr; uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)3&rang;::validateRange(unsigned char) const
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;::CANIfaceStats_()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata)
</UL>
<P><STRONG><a name="[295]"></a>uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, uc_outgoing_transfer_registry.o(i._ZNK6uavcan24OutgoingTransferRegistry6existsENS_10DataTypeIDENS_12TransferTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::operator ==(uavcan::DataTypeID) const
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::hasPublisher(uavcan::DataTypeID) const
</UL>

<P><STRONG><a name="[db]"></a>uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, uc_transfer_buffer.o(i._ZNK6uavcan24StaticTransferBufferImpl4readEjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::StaticTransferBufferImpl::read(unsigned, unsigned char*, unsigned) const
</UL>
<BR>[Address Reference Count : 8]<UL><LI> uc_transfer_buffer.o(.constdata__ZTVN6uavcan24StaticTransferBufferImplE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt123EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt377EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt93EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt1EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt73EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt371EEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan20StaticTransferBufferILt7EEE)
</UL>
<P><STRONG><a name="[dd]"></a>uavcan::MultiFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, uc_transfer_listener.o(i._ZNK6uavcan26MultiFrameIncomingTransfer4readEjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::MultiFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const &rArr; uavcan::TransferBufferAccessor::access() &rArr; uavcan::TransferBufferManager::access(const uavcan::TransferBufferManagerKey&) &rArr; uavcan::TransferBufferManager::findFirst(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferAccessor::access()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan26MultiFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[e0]"></a>uavcan::TransferBufferManagerEntry::read(unsigned, unsigned char*, unsigned) const</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, uc_transfer_buffer.o(i._ZNK6uavcan26TransferBufferManagerEntry4readEjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::TransferBufferManagerEntry::read(unsigned, unsigned char*, unsigned) const &rArr; uavcan::TransferBufferManagerEntry::Block::read(unsigned char*&, unsigned, unsigned&, unsigned&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::Block::read(unsigned char*&, unsigned, unsigned&, unsigned&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_buffer.o(.constdata__ZTVN6uavcan26TransferBufferManagerEntryE)
</UL>
<P><STRONG><a name="[e3]"></a>uavcan::SingleFrameIncomingTransfer::isAnonymousTransfer() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uc_transfer_listener.o(i._ZNK6uavcan27SingleFrameIncomingTransfer19isAnonymousTransferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::SingleFrameIncomingTransfer::isAnonymousTransfer() const
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::isBroadcast() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[e2]"></a>uavcan::SingleFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, uc_transfer_listener.o(i._ZNK6uavcan27SingleFrameIncomingTransfer4readEjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::SingleFrameIncomingTransfer::read(unsigned, unsigned char*, unsigned) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan27SingleFrameIncomingTransferE)
</UL>
<P><STRONG><a name="[237]"></a>uavcan::MonotonicDeadlineHandlerInsertionComparator::operator ()(const uavcan::DeadlineHandler*) const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_scheduler.o(i._ZNK6uavcan43MonotonicDeadlineHandlerInsertionComparatorclEPKNS_15DeadlineHandlerE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
</UL>

<P><STRONG><a name="[278]"></a>uavcan::Frame::getPriority() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZNK6uavcan5Frame11getPriorityEv))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[1d6]"></a>uavcan::Frame::getDstNodeID() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZNK6uavcan5Frame12getDstNodeIDEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[22a]"></a>uavcan::Frame::getTransferID() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZNK6uavcan5Frame13getTransferIDEv))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::SingleFrameIncomingTransfer::SingleFrameIncomingTransfer(const uavcan::RxFrame&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MultiFrameIncomingTransfer::MultiFrameIncomingTransfer(uavcan::MonotonicTime, uavcan::UtcTime, const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::validate(const uavcan::RxFrame&) const
</UL>

<P><STRONG><a name="[1e7]"></a>uavcan::Frame::compile(uavcan::CanFrame&) const</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, uc_frame.o(i._ZNK6uavcan5Frame7compileERNS_8CanFrameE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::Frame::compile(uavcan::CanFrame&) const &rArr; uavcan::Frame::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 uavcan::copy&lang;const unsigned char*, unsigned char*&rang;(T1, T1, T2)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::isValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[283]"></a>uavcan::Frame::isValid() const</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, uc_frame.o(i._ZNK6uavcan5Frame7isValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::Frame::isValid() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeID::getMaxValueForDataTypeKind(uavcan::DataTypeKind)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::isValid() const
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::operator ==(uavcan::NodeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::compile(uavcan::CanFrame&) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::parse(const uavcan::CanFrame&)
</UL>

<P><STRONG><a name="[23a]"></a>uavcan::INode::isPassiveMode() const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uc_node_status_provider.o(i._ZNK6uavcan5INode13isPassiveModeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::INode::isPassiveMode() const
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::handleTimerEvent(const uavcan::TimerEvent&)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[1bc]"></a>uavcan::INode::getMonotonicTime() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scu_libuavcan.o(i._ZNK6uavcan5INode16getMonotonicTimeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::INode::getMonotonicTime() const
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::spin(unsigned)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
</UL>

<P><STRONG><a name="[285]"></a>uavcan::Logger::getExternalSinkLevel() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan6Logger20getExternalSinkLevelEv))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::log(unsigned char, const char*, const char*)
</UL>

<P><STRONG><a name="[212]"></a>uavcan::NodeID::isBroadcast() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_transfer_listener.o(i._ZNK6uavcan6NodeID11isBroadcastEv))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::SingleFrameIncomingTransfer::isAnonymousTransfer() const
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)
</UL>

<P><STRONG><a name="[2a7]"></a>uavcan::NodeID::isValid() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uc_frame.o(i._ZNK6uavcan6NodeID7isValidEv))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::isValid() const
</UL>

<P><STRONG><a name="[29a]"></a>uavcan::NodeID::isUnicast() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_transfer_sender.o(i._ZNK6uavcan6NodeID9isUnicastEv))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const
</UL>

<P><STRONG><a name="[250]"></a>uavcan::NodeID::operator ==(uavcan::NodeID) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(i._ZNK6uavcan6NodeIDeqES0_))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::isValid() const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>

<P><STRONG><a name="[1d7]"></a>uavcan::NodeID::operator !=(uavcan::NodeID) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_dispatcher.o(i._ZNK6uavcan6NodeIDneES0_))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::handleFrame(const uavcan::CanRxFrame&)
</UL>

<P><STRONG><a name="[1d0]"></a>uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, uc_can.o(i._ZNK6uavcan8CanFrame18priorityHigherThanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::CanFrame::priorityHigherThan(const uavcan::CanFrame&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::Entry::qosHigherThan(const uavcan::CanFrame&, uavcan::CanTxQueue::Qos) const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::topPriorityHigherOrEqual(const uavcan::CanFrame&) const
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const
</UL>

<P><STRONG><a name="[1c7]"></a>const uavcan::protocol::param::Value_&lang;(int)0&rang;::TagToType&lang;T1&rang;::StorageType* uavcan::protocol::param::Value_&lang;(int)0&rang;::as&lang;(uavcan::protocol::param::Value_&lang;(int)0&rang;::Tag::Type)1&rang;() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scuparammanager.o(i._ZNK6uavcan8protocol5param6Value_ILi0EE2asILNS3_3Tag4TypeE1EEEPKNS3_9TagToTypeIXT_EE11StorageTypeEv))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::assignParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, const uavcan::protocol::param::Value_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[209]"></a>uavcan::Scheduler::getMonotonicTime() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_scheduler.o(i._ZNK6uavcan9Scheduler16getMonotonicTimeEv))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[28c]"></a>uavcan::Scheduler::computeDispatcherSpinDeadline(uavcan::MonotonicTime) const</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, uc_scheduler.o(i._ZNK6uavcan9Scheduler29computeDispatcherSpinDeadlineENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::Scheduler::computeDispatcherSpinDeadline(uavcan::MonotonicTime) const &rArr; uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::getEarliestDeadline() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::spin(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[204]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::CanInitHelper()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::CanIOManager(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&, unsigned)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[172]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCanDriver()
</UL>

<P><STRONG><a name="[b7]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 12]<UL><LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16IncomingTransferE)
<LI> uc_transfer_listener.o(.constdata__ZTVN6uavcan16TransferListenerE)
<LI> uc_timer.o(.constdata__ZTVN6uavcan9TimerBaseE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan15DeadlineHandlerE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
<LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[2b5]"></a>getPulsCnt</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mm_control.o(i.getPulsCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getPulsCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_algorithm
</UL>

<P><STRONG><a name="[106]"></a>main</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = main &rArr; MX_FREERTOS_Init() &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readParametersFromFlash
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDefaultParameters
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART6_UART_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::can_init()
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[167]"></a>mm_control_IRQHandler</STRONG> (Thumb, 764 bytes, Stack size 56 bytes, mm_control.o(i.mm_control_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mm_control_IRQHandler &rArr; xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
</UL>

<P><STRONG><a name="[176]"></a>mm_control_algorithm</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, mm_control.o(i.mm_control_algorithm))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = mm_control_algorithm &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sign
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPulsCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmControlTask(const void*)
</UL>

<P><STRONG><a name="[2b7]"></a>mm_control_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, mm_control.o(i.mm_control_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mm_control_init &rArr; HAL_TIM_OC_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[177]"></a>osDelay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cmsis_os.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask(const void*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmControlTask(const void*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::waitMsrINakBitStateChange(bool)
</UL>

<P><STRONG><a name="[2b8]"></a>osKernelStart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmsis_os.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[166]"></a>osSystickHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cmsis_os.o(i.osSystickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osSystickHandler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[17d]"></a>osThreadCreate</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, cmsis_os.o(i.osThreadCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeFreeRtosPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init()
</UL>

<P><STRONG><a name="[2d6]"></a>pvPortMalloc</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[2e9]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2d1]"></a>pxPortInitialiseStack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[1c5]"></a>readDefaultParameters</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(i.readDefaultParameters))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::eraseAllParams()
</UL>

<P><STRONG><a name="[2b6]"></a>readParametersFromFlash</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, flash.o(i.readParametersFromFlash))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2bb]"></a>sign</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mm_control.o(i.sign))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_algorithm
</UL>

<P><STRONG><a name="[17a]"></a>ulTaskNotifyTake</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, tasks.o(i.ulTaskNotifyTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ulTaskNotifyTake &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDecodeMsgTask(void*)
</UL>

<P><STRONG><a name="[16b]"></a>usart1_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, usart.o(i.usart1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usart1_IRQHandler &rArr; vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[2c2]"></a>uxListRemove</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
</UL>

<P><STRONG><a name="[2c6]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[2d0]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[2c4]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[2c3]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
</UL>

<P><STRONG><a name="[18d]"></a>vPortEnterCritical</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getMonotonic()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::isRxBufferEmpty() const
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::getErrorCount() const
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::initOnce()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::send(const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::discardTimedOutTxMailboxes(uavcan::MonotonicTime)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::init()
</UL>

<P><STRONG><a name="[18e]"></a>vPortExitCritical</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getMonotonic()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::canAcceptNewTxFrame(const uavcan::CanFrame&) const
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::isRxBufferEmpty() const
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::getErrorCount() const
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::initOnce()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::select(uavcan::CanSelectMasks&, const uavcan::CanFrame*(&)[3], uavcan::MonotonicTime)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::receive(uavcan::CanFrame&, uavcan::MonotonicTime&, uavcan::UtcTime&, unsigned short&)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::send(const uavcan::CanFrame&, uavcan::MonotonicTime, unsigned short)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::init(unsigned, uavcan_stm32::CanIface::OperatingMode)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::discardTimedOutTxMailboxes(uavcan::MonotonicTime)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::init()
</UL>

<P><STRONG><a name="[2ce]"></a>vPortFree</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[2e4]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[2da]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>

<P><STRONG><a name="[2bc]"></a>vTaskDelay</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[2d5]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[2d9]"></a>vTaskNotifyGiveFromISR</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, tasks.o(i.vTaskNotifyGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_IRQHandler
</UL>

<P><STRONG><a name="[2dc]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2dd]"></a>vTaskPriorityInherit</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2ea]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2bd]"></a>vTaskStartScheduler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[2c8]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[10c]"></a>vTaskSwitchContext</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[2df]"></a>writeFloat2Flash</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, flash.o(i.writeFloat2Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = writeFloat2Flash &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
</UL>

<P><STRONG><a name="[1c4]"></a>writeParams2Flash</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, flash.o(i.writeParams2Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = writeParams2Flash &rArr; writeFloat2Flash &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Erase_Sector
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFloat2Flash
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSector
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::saveAllParams()
</UL>

<P><STRONG><a name="[2de]"></a>xPortStartScheduler</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[2bf]"></a>xPortSysTickHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>

<P><STRONG><a name="[2b2]"></a>xQueueCreateMutex</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, queue.o(i.xQueueCreateMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueCreateMutex &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
</UL>

<P><STRONG><a name="[17f]"></a>xQueueGenericCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::CanInitHelper()
</UL>

<P><STRONG><a name="[175]"></a>xQueueGenericReceive</STRONG> (Thumb, 360 bytes, Stack size 64 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_algorithm
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mmControlTask(const void*)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::wait(uavcan::MonotonicDuration)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::Mutex::lock()
</UL>

<P><STRONG><a name="[2e8]"></a>xQueueGenericReset</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[17b]"></a>xQueueGenericSend</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_algorithm
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDecodeMsgTask(void*)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::motor_ref_callback(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::Mutex::unlock()
</UL>

<P><STRONG><a name="[195]"></a>xQueueGiveFromISR</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::BusEvent::signalFromInterrupt()
</UL>

<P><STRONG><a name="[2ba]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mm_control_IRQHandler
</UL>

<P><STRONG><a name="[2eb]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[17e]"></a>xTaskCreate</STRONG> (Thumb, 86 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init()
</UL>

<P><STRONG><a name="[2be]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>

<P><STRONG><a name="[1ba]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[2e7]"></a>xTaskIncrementTick</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[2cd]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[2d4]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[2c9]"></a>xTaskResumeAll</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[173]"></a>uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::CanInitHelper()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scu_libuavcanstm32.o(t._ZN12uavcan_stm3213CanInitHelperILj128EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::CanInitHelper() &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCanDriver()
</UL>

<P><STRONG><a name="[3cf]"></a>uavcan_stm32::CanInitHelper&lang;(unsigned)128&rang;::CanInitHelper__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcanstm32.o(t._ZN12uavcan_stm3213CanInitHelperILj128EEC1Ev), UNUSED)

<P><STRONG><a name="[a5]"></a>uavcan::Subscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan10SubscriberINS_8protocol15GlobalTimeSync_ILi0EEENS_12MethodBinderIPNS_19GlobalTimeSyncSlaveEMS5_FvRKNS_21ReceivedDataStructureIS3_EEEEEE24handleReceivedDataStructERS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = uavcan::Subscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;::operator bool() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan10SubscriberINS_8protocol15GlobalTimeSync_ILi0EEENS_12MethodBinderIPNS_19GlobalTimeSyncSlaveEMS5_FvRKNS_21ReceivedDataStructureIS3_EEEEEEE)
</UL>
<P><STRONG><a name="[a6]"></a>uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS4_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;&) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;::operator bool() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan10SubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEENS_12MethodBinderIP13scu_libuavcanMS6_FvRKS4_EEEEE)
</UL>
<P><STRONG><a name="[2ed]"></a>uavcan::IntegerSpec&lang;(unsigned)16, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned short, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj16ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEtRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)16, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned short, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)16, (unsigned)2&rang;(unsigned char(&)[T2])
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2ef]"></a>uavcan::IntegerSpec&lang;(unsigned)1, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(bool, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj1ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEbRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)1, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(bool, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[2f0]"></a>uavcan::IntegerSpec&lang;(unsigned)2, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj2ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)2, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::encode&lang;(unsigned)2, unsigned char&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)2, unsigned char&rang;(T2)
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f2]"></a>uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj32ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEjRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f4]"></a>uavcan::IntegerSpec&lang;(unsigned)3, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj3ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)3, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::encode&lang;(unsigned)3, unsigned char&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)3, unsigned char&rang;(T2)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[2f6]"></a>uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj48ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEyRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)48, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)0&rang;) const
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[354]"></a>uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::min()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj48ELNS_10SignednessE1ELNS_8CastModeE0EE3minEv))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f8]"></a>uavcan::IntegerSpec&lang;(unsigned)5, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj5ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)5, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f9]"></a>uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj64ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEyRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)64, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2fb]"></a>uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj64ELNS_10SignednessE1ELNS_8CastModeE0EE6encodeExRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)64, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::encode(const uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2fc]"></a>uavcan::IntegerSpec&lang;(unsigned)6, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj6ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)6, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2fd]"></a>uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj7ELNS_10SignednessE0ELNS_8CastModeE0EE6decodeERhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[2fe]"></a>uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj7ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2ff]"></a>uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EE6decodeERhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[300]"></a>uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EE6encodeEhRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) const
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2ee]"></a>uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)16, (unsigned)2&rang;(unsigned char(&)[T2])</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec16convertByteOrderILj16ELj2EEENS_8EnableIfIXgtT_Li8EEvE4TypeERAT0__h))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)16, (unsigned)2&rang;(unsigned char(&)[T2]) &rArr; uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)16, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned short, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[302]"></a>uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)32, (unsigned)4&rang;(unsigned char(&)[T2])</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec16convertByteOrderILj32ELj4EEENS_8EnableIfIXgtT_Li8EEvE4TypeERAT0__h))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)32, (unsigned)4&rang;(unsigned char(&)[T2]) &rArr; uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f7]"></a>uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)48, (unsigned)8&rang;(unsigned char(&)[T2])</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec16convertByteOrderILj48ELj8EEENS_8EnableIfIXgtT_Li8EEvE4TypeERAT0__h))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)48, (unsigned)8&rang;(unsigned char(&)[T2]) &rArr; uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[2fa]"></a>uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)64, (unsigned)8&rang;(unsigned char(&)[T2])</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec16convertByteOrderILj64ELj8EEENS_8EnableIfIXgtT_Li8EEvE4TypeERAT0__h))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)64, (unsigned)8&rang;(unsigned char(&)[T2]) &rArr; uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[303]"></a>int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec6decodeILj16EtEEiRT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)16, (unsigned)2&rang;(unsigned char(&)[T2])
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[2f1]"></a>int uavcan::ScalarCodec::encode&lang;(unsigned)2, unsigned char&rang;(T2)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec6encodeILj2EhEEiT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = int uavcan::ScalarCodec::encode&lang;(unsigned)2, unsigned char&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)2, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::encode(const uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f3]"></a>int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec6encodeILj32EjEEiT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)32, (unsigned)4&rang;(unsigned char(&)[T2])
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::FloatSpec&lang;(unsigned)32, (uavcan::CastMode)0&rang;::encode(float, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2f5]"></a>int uavcan::ScalarCodec::encode&lang;(unsigned)3, unsigned char&rang;(T2)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan11ScalarCodec6encodeILj3EhEEiT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = int uavcan::ScalarCodec::encode&lang;(unsigned)3, unsigned char&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)3, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2b3]"></a>uavcan::DurationBase&lang;uavcan::UtcDuration&rang;::fromMSec(long long)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uc_stm32_clock.o(t._ZN6uavcan12DurationBaseINS_11UtcDurationEE8fromMSecEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::DurationBase&lang;uavcan::UtcDuration&rang;::fromMSec(long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
</UL>

<P><STRONG><a name="[28e]"></a>uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::getInfinite()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_timer.o(t._ZN6uavcan12DurationBaseINS_17MonotonicDurationEE11getInfiniteEv))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[1bb]"></a>uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uc_transfer_receiver.o(t._ZN6uavcan12DurationBaseINS_17MonotonicDurationEE8fromMSecEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::spin(unsigned)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::getIfaceSwitchDelay() const
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::getTidTimeout() const
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::Scheduler(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::Logger(uavcan::INode&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
</UL>

<P><STRONG><a name="[243]"></a>uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromUSec(long long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan12DurationBaseINS_17MonotonicDurationEE8fromUSecEx))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::publish()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setStatusPublicationPeriod(uavcan::MonotonicDuration)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
</UL>

<P><STRONG><a name="[a8]"></a>uavcan::PoolAllocator&lang;(unsigned)25600, (unsigned char)64, char&rang;::deallocate(const void*)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan13PoolAllocatorILj25600ELh64EcE10deallocateEPKv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13PoolAllocatorILj25600ELh64EcEE)
</UL>
<P><STRONG><a name="[a7]"></a>uavcan::PoolAllocator&lang;(unsigned)25600, (unsigned char)64, char&rang;::allocate(unsigned)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan13PoolAllocatorILj25600ELh64EcE8allocateEj))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13PoolAllocatorILj25600ELh64EcEE)
</UL>
<P><STRONG><a name="[ab]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 340 bytes, Stack size 448 bytes, uc_node_status_provider.o(t._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424 + Unknown Stack Size
<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::~Response_()
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::SoftwareVersion_()
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[249]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
</UL>

<P><STRONG><a name="[3d0]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol12GetNodeInfo_ENS_12MethodBinderIPNS_18NodeStatusProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[ad]"></a>uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERSA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;::getSrcNodeID() const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;::operator bool() const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[308]"></a>uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3d1]"></a>uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol12RestartNode_ENS_12MethodBinderIPKNS_20RestartRequestServerEMS4_KFvRKNS_21ReceivedDataStructureINS2_8Request_ILi0EEEEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[af]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 296 bytes, Stack size 152 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[30a]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3d2]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol16GetDataTypeInfo_ENS_12MethodBinderIPNS_20DataTypeInfoProviderEMS4_FvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[b1]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 306 bytes, Stack size 168 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;::operator bool() const
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::ArrayImpl&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::initialize&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;&rang;(...)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[30e]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[3d3]"></a>uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEEC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[b3]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[1b6]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[3d4]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param14ExecuteOpcode_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[b5]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)</STRONG> (Thumb, 320 bytes, Stack size 504 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472 + Unknown Stack Size
<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::Value_()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::NumericValue_()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEE)
</UL>
<P><STRONG><a name="[1b5]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEC1ERNS_5INodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::GenericSubscriberBase(uavcan::INode&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::getDefaultMaxTransferInterval()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[3d5]"></a>uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer__sub_object(uavcan::INode&)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol5param7GetSet_ENS_12MethodBinderIPNS_11ParamServerEMS5_FvRKNS3_8Request_ILi0EEERNS3_9Response_ILi0EEEEEEEC1ERNS_5INodeE), UNUSED)

<P><STRONG><a name="[1cf]"></a>uavcan::LinkedListRoot&lang;uavcan::CanTxQueue::Entry&rang;::remove(const uavcan::CanTxQueue::Entry*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_can_io.o(t._ZN6uavcan14LinkedListRootINS_10CanTxQueue5EntryEE6removeEPKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::push(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[236]"></a>uavcan::LinkedListRoot&lang;uavcan::DeadlineHandler&rang;::remove(const uavcan::DeadlineHandler*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_scheduler.o(t._ZN6uavcan14LinkedListRootINS_15DeadlineHandlerEE6removeEPKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::remove(uavcan::DeadlineHandler*)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::add(uavcan::DeadlineHandler*)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::pollAndGetMonotonicTime(uavcan::ISystemClock&)
</UL>

<P><STRONG><a name="[1dc]"></a>uavcan::LinkedListRoot&lang;uavcan::TransferListener&rang;::remove(const uavcan::TransferListener*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_dispatcher.o(t._ZN6uavcan14LinkedListRootINS_16TransferListenerEE6removeEPKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Dispatcher::ListenerRegistry::add(uavcan::TransferListener*, uavcan::Dispatcher::ListenerRegistry::Mode)
</UL>

<P><STRONG><a name="[26e]"></a>uavcan::LinkedListRoot&lang;uavcan::GlobalDataTypeRegistry::Entry&rang;::remove(const uavcan::GlobalDataTypeRegistry::Entry*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_global_data_type_registry.o(t._ZN6uavcan14LinkedListRootINS_22GlobalDataTypeRegistry5EntryEE6removeEPKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
</UL>

<P><STRONG><a name="[27a]"></a>uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry::Block&rang;::remove(const uavcan::TransferBufferManagerEntry::Block*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_transfer_buffer.o(t._ZN6uavcan14LinkedListRootINS_26TransferBufferManagerEntry5BlockEE6removeEPKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::reset(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[267]"></a>uavcan::LinkedListRoot&lang;uavcan::TransferBufferManagerEntry&rang;::remove(const uavcan::TransferBufferManagerEntry*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_transfer_buffer.o(t._ZN6uavcan14LinkedListRootINS_26TransferBufferManagerEntryEE6removeEPKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::~TransferBufferManager()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::remove(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManager::create(const uavcan::TransferBufferManagerKey&)
</UL>

<P><STRONG><a name="[337]"></a>uavcan::LinkedListRoot&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVGroup&rang;::remove(const uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVGroup*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_transfer_listener.o(t._ZN6uavcan14LinkedListRootINS_3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE7KVGroupEE6removeEPKS5_))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
</UL>

<P><STRONG><a name="[33a]"></a>uavcan::LinkedListRoot&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVGroup&rang;::remove(const uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVGroup*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan14LinkedListRootINS_3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE7KVGroupEE6removeEPKS6_))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
</UL>

<P><STRONG><a name="[71]"></a>uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::LazyConstructor()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_can_io.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEEC1Ev))
<BR>[Address Reference Count : 1]<UL><LI> uc_can_io.o(i._ZN6uavcan12CanIOManagerC1ERNS_10ICanDriverERNS_14IPoolAllocatorERNS_12ISystemClockEj)
</UL>
<P><STRONG><a name="[3d6]"></a>uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::LazyConstructor__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uc_can_io.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEEC1Ev), UNUSED)

<P><STRONG><a name="[73]"></a>uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::~LazyConstructor()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::~LazyConstructor() &rArr; uavcan::CanTxQueue::~CanTxQueue() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanTxQueue::~CanTxQueue()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(i._ZN6uavcan4NodeILj25600EED1Ev)
</UL>
<P><STRONG><a name="[3d7]"></a>uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::~LazyConstructor__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEED1Ev), UNUSED)

<P><STRONG><a name="[1fb]"></a>uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uc_can_io.o(t._ZN6uavcan15LazyConstructorINS_10CanTxQueueEEptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::sendFromTxQueue(unsigned char)
</UL>

<P><STRONG><a name="[313]"></a>void uavcan::LazyConstructor&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder&rang;::construct&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&&rang;(uavcan::ParameterType&lang;T1&rang;::Type, uavcan::ParameterType&lang;T2&rang;::Type, uavcan::ParameterType&lang;T3&rang;::Type, uavcan::ParameterType&lang;T4&rang;::Type)</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, uc_node_status_provider.o(t._ZN6uavcan15LazyConstructorINS_17GenericSubscriberINS_8protocol12GetNodeInfo_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderEE9constructIRS7_RKNS_18DataTypeDescriptorEtRNS_14IPoolAllocatorEEEvNS_13ParameterTypeIT_E4TypeENSH_IT0_E4TypeENSH_IT1_E4TypeENSH_IT2_E4TypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = void uavcan::LazyConstructor&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder&rang;::construct&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&&rang;(uavcan::ParameterType&lang;T1&rang;::Type, uavcan::ParameterType&lang;T2&rang;::Type, uavcan::ParameterType&lang;T3&rang;::Type, uavcan::ParameterType&lang;T4&rang;::Type) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
</UL>

<P><STRONG><a name="[245]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 122 bytes, Stack size 88 bytes, uc_node_status_provider.o(t._ZN6uavcan16GenericPublisherINS_8protocol11NodeStatus_ILi0EEES3_E14genericPublishERKS3_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::publish()
</UL>

<P><STRONG><a name="[304]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 120 bytes, Stack size 448 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol12GetNodeInfo_ENS2_9Response_ILi0EEEE14genericPublishERKS4_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[23d]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uc_node_status_provider.o(t._ZN6uavcan16GenericPublisherINS_8protocol12GetNodeInfo_ENS2_9Response_ILi0EEEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[306]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol12RestartNode_ENS2_9Response_ILi0EEEE14genericPublishERKS4_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)1, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(bool, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[318]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol12RestartNode_ENS2_9Response_ILi0EEEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[309]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 104 bytes, Stack size 168 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol16GetDataTypeInfo_ENS2_9Response_ILi0EEEE14genericPublishERKS4_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[25b]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol16GetDataTypeInfo_ENS2_9Response_ILi0EEEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::start()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[30d]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 104 bytes, Stack size 144 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol18GetTransportStats_ENS2_9Response_ILi0EEEE14genericPublishERKS4_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[31a]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol18GetTransportStats_ENS2_9Response_ILi0EEEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[288]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 138 bytes, Stack size 200 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol5debug11LogMessage_ILi0EEES4_E14genericPublishERKS4_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)3, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::log(unsigned char, const char*, const char*)
</UL>

<P><STRONG><a name="[31c]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol5debug11LogMessage_ILi0EEES4_E9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[30f]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol5param14ExecuteOpcode_ENS3_9Response_ILi0EEEE14genericPublishERKS5_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[1f4]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol5param14ExecuteOpcode_ENS3_9Response_ILi0EEEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[312]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)</STRONG> (Thumb, 106 bytes, Stack size 440 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol5param7GetSet_ENS3_9Response_ILi0EEEE14genericPublishERKS5_NS_12TransferTypeENS_6NodeIDEPNS_10TransferIDENS_13MonotonicTimeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::StaticTransferBufferImpl(unsigned char*, unsigned short)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[1f1]"></a>uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::checkInit()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan16GenericPublisherINS_8protocol5param7GetSet_ENS3_9Response_ILi0EEEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::checkInit() &rArr; uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos) &rArr; uavcan::TransferSender::init(const uavcan::DataTypeDescriptor&, uavcan::CanTxQueue::Qos) &rArr; uavcan::DataTypeSignature::toTransferCRC() const
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::isInited() const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::doInit(uavcan::DataTypeKind, const char*, uavcan::CanTxQueue::Qos)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[358]"></a>T1 uavcan::coerceOrFallback&lang;bool, uavcan::ParamServer*&rang;(const T2&, const T1&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan16coerceOrFallbackIbPNS_11ParamServerEEET_RKT0_RKS3_))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
</UL>

<P><STRONG><a name="[23e]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, uc_node_status_provider.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE12genericStartEMNS_10DispatcherEFbPS5_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::genericStart(bool(uavcan::Dispatcher::*)(uavcan::TransferListener*)) &rArr; void uavcan::LazyConstructor&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder&rang;::construct&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&&rang;(uavcan::ParameterType&lang;T1&rang;::Type, uavcan::ParameterType&lang;T2&rang;::Type, uavcan::ParameterType&lang;T3&rang;::Type, uavcan::ParameterType&lang;T4&rang;::Type) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::LazyConstructor&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder&rang;::construct&lang;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&&rang;(uavcan::ParameterType&lang;T1&rang;::Type, uavcan::ParameterType&lang;T2&rang;::Type, uavcan::ParameterType&lang;T3&rang;::Type, uavcan::ParameterType&lang;T4&rang;::Type)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[be]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, uc_node_status_provider.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_node_status_provider.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[3d8]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[c0]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12GetNodeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[c1]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[321]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[322]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[3d9]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[c3]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol12RestartNode_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[c4]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[323]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[1b9]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[3da]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[c6]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::~GlobalTimeSyncSlave()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol15GlobalTimeSync_ILi0EEES3_NS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[c7]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[324]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 130 bytes, Stack size 136 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[25c]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::start()
</UL>

<P><STRONG><a name="[3db]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[c9]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol16GetDataTypeInfo_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[ca]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[326]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[3dc]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[cc]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol18GetTransportStats_ENS2_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[cd]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[327]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 150 bytes, Stack size 72 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)48, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[1f5]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
</UL>

<P><STRONG><a name="[3dd]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[cf]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param14ExecuteOpcode_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[d0]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[328]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 102 bytes, Stack size 296 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::Value_()
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[1f2]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
</UL>

<P><STRONG><a name="[3de]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[d2]"></a>uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::~ServiceServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_8protocol5param7GetSet_ENS3_8Request_ILi0EEENS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[d3]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarder22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE17TransferForwarderE)
</UL>
<P><STRONG><a name="[32a]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)</STRONG> (Thumb, 108 bytes, Stack size 160 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&) &rArr; uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::BitStream(uavcan::ITransferBuffer&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferPerfCounter::addError()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::initialize&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;&rang;(...)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::TransferForwarder::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[1b3]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE9checkInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit() &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::INode::getDispatcher()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TransferListener__sub_object(uavcan::TransferPerfCounter&, const uavcan::DataTypeDescriptor&, unsigned short, uavcan::IPoolAllocator&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::find(uavcan::DataTypeKind, const char*) const
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[3df]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEED2Ev), UNUSED)

<P><STRONG><a name="[d5]"></a>uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object() &rArr; uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::unregisterServiceResponseListener(uavcan::TransferListener*) &rArr; uavcan::Dispatcher::ListenerRegistry::remove(uavcan::TransferListener*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::~Subscriber()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEEE)
</UL>
<P><STRONG><a name="[2a8]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol11NodeStatus_ILi0EEEEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID) &rArr; uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::getDataTypeSignature()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___27_uc_node_status_provider_cpp_54b78f91
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[2a9]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 162 bytes, Stack size 80 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol12GetNodeInfo_EEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::NodeStatus_&lang;(int)0&rang;::getDataTypeSignature()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___27_uc_node_status_provider_cpp_54b78f91
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[2ac]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol12RestartNode_EEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID) &rArr; uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[2ae]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol15GlobalTimeSync_ILi0EEEEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID) &rArr; uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
</UL>

<P><STRONG><a name="[2b4]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, uc_dynamic_node_id_client.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol15dynamic_node_id11Allocation_ILi0EEEEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID) &rArr; uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3
</UL>

<P><STRONG><a name="[2aa]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol16GetDataTypeInfo_EEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::protocol::DataTypeKind_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::DataTypeKind_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[2ad]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol18GetTransportStats_EEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[2ab]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol5debug11LogMessage_ILi0EEEEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_ScuRestartRequestHandler_cpp_1d0ead51
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_uc_stm32_can_cpp_7d6b3317
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_scu_libuavcanSTM32_cpp_be63688e
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_uc_stm32_clock_cpp_87095aac
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_uc_stm32_thread_cpp_d810ad60
</UL>

<P><STRONG><a name="[2b1]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol5param14ExecuteOpcode_EEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID) &rArr; uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
</UL>

<P><STRONG><a name="[2b0]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_8protocol5param7GetSet_EEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_ScuParamManager_cpp_e368b1fe
</UL>

<P><STRONG><a name="[2af]"></a>uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, freertos.o(t._ZN6uavcan22GlobalDataTypeRegistry16registerDataTypeINS_9equipment8actuator13ArrayCommand_ILi0EEEEENS0_18RegistrationResultENS_10DataTypeIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::Entry::Entry()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeDescriptor::DataTypeDescriptor(uavcan::DataTypeKind, uavcan::DataTypeID, const uavcan::DataTypeSignature&, const char*)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::registImpl(uavcan::GlobalDataTypeRegistry::Entry*)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_freertos_cpp_e87d2b16
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_scu_can1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_scu_libuavcan_cpp_a5b52e7e
</UL>

<P><STRONG><a name="[21d]"></a>void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)</STRONG> (Thumb, 78 bytes, Stack size 64 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE14removeAllWhereINS3_12YesPredicateEEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::match(const uavcan::TransferBufferManagerKey&) const
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::~KVPair()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerKey::TransferBufferManagerKey()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::~TransferListener__sub_object()
</UL>

<P><STRONG><a name="[21b]"></a>void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE14removeAllWhereINS_16TransferListener25TimedOutReceiverPredicateEEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1) &rArr; uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const &rArr; uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const &rArr; uavcan::TransferReceiver::getTidTimeout() const &rArr; uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::fromMSec(long long)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::match(const uavcan::TransferBufferManagerKey&) const
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::~KVPair()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerKey::TransferBufferManagerKey()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::TimedOutReceiverPredicate::operator ()(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) const
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::cleanup(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[336]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairC1ERKS1_RKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
</UL>

<P><STRONG><a name="[3e0]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair__sub_object(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairC1ERKS1_RKS2_), UNUSED)

<P><STRONG><a name="[7e]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerKey::TransferBufferManagerKey()
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::TransferReceiver()
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6insertERKS1_RKS2_)
</UL>
<P><STRONG><a name="[3e1]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPairC1Ev), UNUSED)

<P><STRONG><a name="[210]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6insertERKS1_RKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&) &rArr; uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::findKey(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::KVPair(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVGroup&rang;::remove(const uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVGroup*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::~KVPair()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerKey::TransferBufferManagerKey()
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)
</UL>

<P><STRONG><a name="[335]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::match(const uavcan::TransferBufferManagerKey&) const
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVGroup&rang;::remove(const uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVGroup*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerKey::TransferBufferManagerKey()
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[20e]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::findKey(const uavcan::TransferBufferManagerKey&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, uc_transfer_listener.o(t._ZN6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE7findKeyERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::findKey(const uavcan::TransferBufferManagerKey&)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::match(const uavcan::TransferBufferManagerKey&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::insert(const uavcan::TransferBufferManagerKey&, const uavcan::TransferReceiver&)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferListener::handleFrame(const uavcan::RxFrame&)
</UL>

<P><STRONG><a name="[276]"></a>void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE14removeAllWhereINS2_24DeadlineExpiredPredicateEEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::cleanup(uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[27f]"></a>void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1)</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, scu_libuavcan.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE14removeAllWhereINS4_12YesPredicateEEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::~Node()
</UL>

<P><STRONG><a name="[339]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairC1ERKS1_RKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
</UL>

<P><STRONG><a name="[3e2]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair__sub_object(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairC1ERKS1_RKS3_), UNUSED)

<P><STRONG><a name="[80]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::Value::Value()
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6insertERKS1_RKS3_)
</UL>
<P><STRONG><a name="[3e3]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPairC1Ev), UNUSED)

<P><STRONG><a name="[275]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)</STRONG> (Thumb, 168 bytes, Stack size 80 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6insertERKS1_RKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::findKey(const uavcan::OutgoingTransferRegistryKey&)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::KVPair(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVGroup&rang;::remove(const uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVGroup*)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::accessOrCreate(const uavcan::OutgoingTransferRegistryKey&, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[338]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact() &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LinkedListRoot&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVGroup&rang;::remove(const uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVGroup*)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistryKey::OutgoingTransferRegistryKey()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[273]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::findKey(const uavcan::OutgoingTransferRegistryKey&)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, uc_outgoing_transfer_registry.o(t._ZN6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE7findKeyERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::findKey(const uavcan::OutgoingTransferRegistryKey&) &rArr; uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::insert(const uavcan::OutgoingTransferRegistryKey&, const uavcan::OutgoingTransferRegistry::Value&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::accessOrCreate(const uavcan::OutgoingTransferRegistryKey&, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[191]"></a>const T1& uavcan::max&lang;float&rang;(const T1&, const T1&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_stm32_clock.o(t._ZN6uavcan3maxIfEERKT_S3_S3_))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[277]"></a>const T1& uavcan::max&lang;unsigned short&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_transfer_buffer.o(t._ZN6uavcan3maxItEERKT_S3_S3_))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferBufferManagerEntry::write(unsigned, const unsigned char*, unsigned)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::StaticTransferBufferImpl::write(unsigned, const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[192]"></a>const T1& uavcan::min&lang;float&rang;(const T1&, const T1&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_stm32_clock.o(t._ZN6uavcan3minIfEERKT_S3_S3_))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[e4]"></a>uavcan::Node&lang;(unsigned)25600&rang;::getAllocator()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE12getAllocatorEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
</UL>
<P><STRONG><a name="[e5]"></a>uavcan::Node&lang;(unsigned)25600&rang;::getScheduler()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE12getSchedulerEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
</UL>
<P><STRONG><a name="[e7]"></a>uavcan::Node&lang;(unsigned)25600&rang;::registerInternalFailure(const char*)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE23registerInternalFailureEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = uavcan::Node&lang;(unsigned)25600&rang;::registerInternalFailure(const char*) &rArr; uavcan::Logger::log(unsigned char, const char*, const char*) &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::log(unsigned char, const char*, const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
</UL>
<P><STRONG><a name="[1ae]"></a>uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)</STRONG> (Thumb, 296 bytes, Stack size 48 bytes, scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EE5startENS_16TransferPriorityE))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority) &rArr; uavcan::NodeStatusProvider::publish() &rArr; uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::GenericPublisherBase::genericPublish(const uavcan::StaticTransferBufferImpl&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime) &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const &rArr; uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID) const &rArr; uavcan::Dispatcher::send(const uavcan::Frame&, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::CanTxQueue::Qos, unsigned short, unsigned char) &rArr; uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short) &rArr; uavcan::CanIOManager::sendFromTxQueue(unsigned char) &rArr; uavcan::CanTxQueue::peek() &rArr; uavcan::CanTxQueue::remove(uavcan::CanTxQueue::Entry*&) &rArr; uavcan::CanTxQueue::Entry::destroy(uavcan::CanTxQueue::Entry*&, uavcan::IPoolAllocator&)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::start()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::freeze()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::stop(uavcan::TransferListener*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriberBase::genericStart(uavcan::TransferListener*, bool(uavcan::Dispatcher::*)(uavcan::TransferListener*))
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;::operator bool() const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;::operator bool() const
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::checkInit()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::checkInit()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&rang;::checkInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[1a8]"></a>uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&)</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EEC1ERNS_10ICanDriverERNS_12ISystemClockE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = uavcan::Node&lang;(unsigned)25600&rang;::Node(uavcan::ICanDriver&, uavcan::ISystemClock&) &rArr; uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&) &rArr; uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&) &rArr; uavcan::GenericPublisherBase::GenericPublisherBase(uavcan::INode&, uavcan::MonotonicDuration, uavcan::MonotonicDuration) &rArr; uavcan::GenericPublisherBase::setTxTimeout(uavcan::MonotonicDuration)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::Scheduler(uavcan::ICanDriver&, uavcan::IPoolAllocator&, uavcan::ISystemClock&)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::Logger(uavcan::INode&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
</UL>

<P><STRONG><a name="[3e4]"></a>uavcan::Node&lang;(unsigned)25600&rang;::Node__sub_object(uavcan::ICanDriver&, uavcan::ISystemClock&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan4NodeILj25600EEC1ERNS_10ICanDriverERNS_12ISystemClockE), UNUSED)

<P><STRONG><a name="[281]"></a>T2 uavcan::copy&lang;const unsigned char*, unsigned char*&rang;(T1, T1, T2)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_frame.o(t._ZN6uavcan4copyIPKhPhEET0_T_S5_S4_))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::compile(uavcan::CanFrame&) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::parse(const uavcan::CanFrame&)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Frame::setPayload(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[1b0]"></a>void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan4fillIPhhEEvT_S2_RKT0_))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::RestartNode_, uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::~GenericSubscriber__sub_object()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::~LazyConstructor()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::ServiceServer(uavcan::INode&)
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::write(const unsigned char*, unsigned)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::BitStream::read(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[33c]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj128EE10decodeImplERNS_11ScalarCodecENS_25TailArrayOptimizationModeENS_11BooleanTypeILb1EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::at(unsigned char)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::push_back(const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[33f]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj128EE6encodeERKS6_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)128&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[33d]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::push_back(const unsigned char&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj128EE9push_backERKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::push_back(const unsigned char&) &rArr; uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)128&rang;::validateRange(unsigned char) const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::at(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[31d]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj31EE6encodeERKS6_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)5, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)31&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[325]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj80EE10decodeImplERNS_11ScalarCodecENS_25TailArrayOptimizationModeENS_11BooleanTypeILb1EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::at(unsigned char)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[342]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj80EE6encodeERKS6_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)80&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[1aa]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj80EE9push_backERKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&) &rArr; uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)80&rang;::validateRange(unsigned char) const
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::at(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::handleGetDataTypeInfoRequest(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[31e]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj90EE6encodeERKS6_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)90&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;, uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[344]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EE10decodeImplERNS_11ScalarCodecENS_25TailArrayOptimizationModeENS_11BooleanTypeILb1EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::at(unsigned char)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::push_back(const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[347]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EE6encodeERKS6_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)7, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)92&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[345]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::push_back(const unsigned char&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EE9push_backERKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::push_back(const unsigned char&) &rArr; uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)92&rang;::validateRange(unsigned char) const
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::at(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[293]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator =(const char*)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, scuparammanager.o(t._ZN6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EEaSEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator =(const char*) &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)92&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::getParamNameByIndex(unsigned short, uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&) const
</UL>

<P><STRONG><a name="[32c]"></a>uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_9equipment8actuator8Command_ILi0EEELNS_9ArrayModeE1ELj15EE10decodeImplERNS_11ScalarCodecENS_25TailArrayOptimizationModeENS_11BooleanTypeILb1EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::equipment::actuator::Command_&lang;(int)0&rang;::Command_()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::at(unsigned char)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::push_back(const uavcan::equipment::actuator::Command_&lang;(int)0&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[34a]"></a>uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::push_back(const uavcan::equipment::actuator::Command_&lang;(int)0&rang;&)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan5ArrayINS_9equipment8actuator8Command_ILi0EEELNS_9ArrayModeE1ELj15EE9push_backERKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::push_back(const uavcan::equipment::actuator::Command_&lang;(int)0&rang;&) &rArr; uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)15&rang;::validateRange(unsigned char) const
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::at(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[29f]"></a>uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::fromUSec(unsigned long long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uc_scheduler.o(t._ZN6uavcan8TimeBaseINS_13MonotonicTimeENS_17MonotonicDurationEE8fromUSecEy))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineScheduler::getEarliestDeadline() const
</UL>

<P><STRONG><a name="[32e]"></a>uavcan::protocol::NodeStatus_&lang;(int)0&rang;::getDataTypeSignature()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, freertos.o(t._ZN6uavcan8protocol11NodeStatus_ILi0EE20getDataTypeSignatureEv))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[315]"></a>uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, uc_node_status_provider.o(t._ZN6uavcan8protocol11NodeStatus_ILi0EE6encodeERKS2_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = uavcan::protocol::NodeStatus_&lang;(int)0&rang;::encode(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)3, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;, uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::NodeStatus_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[317]"></a>uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol12GetNodeInfo_9Response_ILi0EE6encodeERKS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) const &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)3, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)2, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)16, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned short, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetNodeInfo_, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[24a]"></a>uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::Response_()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol12GetNodeInfo_9Response_ILi0EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::Response_() &rArr; uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::SoftwareVersion_()
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::NodeStatusProvider(uavcan::INode&)
</UL>

<P><STRONG><a name="[3e5]"></a>uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::Response___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol12GetNodeInfo_9Response_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[330]"></a>uavcan::protocol::DataTypeKind_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, freertos.o(t._ZN6uavcan8protocol13DataTypeKind_ILi0EE23extendDataTypeSignatureERNS_17DataTypeSignatureE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uavcan::protocol::DataTypeKind_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[7c]"></a>uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;::CANIfaceStats_()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol14CANIfaceStats_ILi0EEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(t._ZN6uavcan13ServiceServerINS_8protocol18GetTransportStats_ENS_12MethodBinderIPKNS_22TransportStatsProviderEMS4_KFvRKNS2_8Request_ILi0EEERNS2_9Response_ILi0EEEEEEE24handleReceivedDataStructERNS_21ReceivedDataStructureIS8_EE)
</UL>
<P><STRONG><a name="[3e6]"></a>uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;::CANIfaceStats___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol14CANIfaceStats_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[319]"></a>uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16GetDataTypeInfo_9Response_ILi0EE6encodeERKS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)16, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned short, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[34e]"></a>uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16HardwareVersion_ILi0EE6encodeERKS2_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) const &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) const
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[1c3]"></a>uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16HardwareVersion_ILi0EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion_()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::fill&lang;unsigned char*, unsigned char&rang;(T1, T1, const T2&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan()
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setHardwareVersion(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::Response_()
</UL>

<P><STRONG><a name="[3e7]"></a>uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::HardwareVersion___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16HardwareVersion_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[34d]"></a>uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16SoftwareVersion_ILi0EE6encodeERKS2_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)32, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[1c2]"></a>uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::SoftwareVersion_()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16SoftwareVersion_ILi0EEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan()
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setSoftwareVersion(const uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;::Response_()
</UL>

<P><STRONG><a name="[3e8]"></a>uavcan::protocol::SoftwareVersion_&lang;(int)0&rang;::SoftwareVersion___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol16SoftwareVersion_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[31b]"></a>uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol18GetTransportStats_9Response_ILi0EE6encodeERKS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)0&rang;) const &rArr; uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)2, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)0&rang;) const
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::GetTransportStats_, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[332]"></a>uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, freertos.o(t._ZN6uavcan8protocol5param13NumericValue_ILi0EE23extendDataTypeSignatureERNS_17DataTypeSignatureE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[352]"></a>uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::encode(const uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param13NumericValue_ILi0EE6encodeERKS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::encode(const uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)2, unsigned char&rang;(T2)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::FloatSpec&lang;(unsigned)32, (uavcan::CastMode)0&rang;::encode(float, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[311]"></a>uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::NumericValue_()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param13NumericValue_ILi0EEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[3e9]"></a>uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::NumericValue___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param13NumericValue_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[31f]"></a>uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param14ExecuteOpcode_9Response_ILi0EE6encodeERKS4_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)1, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(bool, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)48, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::min()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)1, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(bool, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[351]"></a>uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, freertos.o(t._ZN6uavcan8protocol5param6Empty_ILi0EE23extendDataTypeSignatureERNS_17DataTypeSignatureE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
</UL>

<P><STRONG><a name="[331]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, freertos.o(t._ZN6uavcan8protocol5param6Value_ILi0EE23extendDataTypeSignatureERNS_17DataTypeSignatureE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
</UL>

<P><STRONG><a name="[355]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param6Value_ILi0EE6decodeERS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)64, (unsigned)8&rang;(unsigned char(&)[T2])
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::EnableIf&lang;(T1&rang;(int)8), void&rang;::Type uavcan::ScalarCodec::convertByteOrder&lang;(unsigned)32, (unsigned)4&rang;(unsigned char(&)[T2])
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[356]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param6Value_ILi0EE6encodeERKS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)3, unsigned char&rang;(T2)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)64, (uavcan::Signedness)1, (uavcan::CastMode)0&rang;::encode(long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::FloatSpec&lang;(unsigned)32, (uavcan::CastMode)0&rang;::encode(float, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[310]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::Value_()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param6Value_ILi0EEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[3ea]"></a>uavcan::protocol::param::Value_&lang;(int)0&rang;::Value___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param6Value_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[329]"></a>uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param7GetSet_8Request_ILi0EE6decodeERS4_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;::decode(uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ScalarCodec::swapByteOrder(unsigned char*, unsigned)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::decode(uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[320]"></a>uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZN6uavcan8protocol5param7GetSet_9Response_ILi0EE6encodeERKS4_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)6, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)5, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::encode(const uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisher&lang;uavcan::protocol::param::GetSet_, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&rang;::genericPublish(const uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&, uavcan::TransferType, uavcan::NodeID, uavcan::TransferID*, uavcan::MonotonicTime)
</UL>

<P><STRONG><a name="[33e]"></a>uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::at(unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan9ArrayImplINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj128EE2atEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)128&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::push_back(const unsigned char&)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[341]"></a>uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::at(unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan9ArrayImplINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj80EE2atEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)80&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[346]"></a>uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::at(unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan9ArrayImplINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EE2atEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)92&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::push_back(const unsigned char&)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[30b]"></a>void uavcan::ArrayImpl&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::initialize&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;&rang;(...)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan9ArrayImplINS_8protocol14CANIfaceStats_ILi0EEELNS_9ArrayModeE1ELj3EE10initializeIS3_EEvz))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[32b]"></a>void uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::initialize&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;&rang;(...)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan9ArrayImplINS_9equipment8actuator8Command_ILi0EEELNS_9ArrayModeE1ELj15EE10initializeIS4_EEvz))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericSubscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::TransferListener&rang;::handleIncomingTransfer(uavcan::IncomingTransfer&)
</UL>

<P><STRONG><a name="[34b]"></a>uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::at(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan9ArrayImplINS_9equipment8actuator8Command_ILi0EEELNS_9ArrayModeE1ELj15EE2atEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::at(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)15&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::push_back(const uavcan::equipment::actuator::Command_&lang;(int)0&rang;&)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[353]"></a>uavcan::FloatSpec&lang;(unsigned)32, (uavcan::CastMode)0&rang;::encode(float, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZN6uavcan9FloatSpecILj32ELNS_8CastModeE0EE6encodeEfRNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = uavcan::FloatSpec&lang;(unsigned)32, (uavcan::CastMode)0&rang;::encode(float, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::encode&lang;(unsigned)32, unsigned&rang;(T2)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::Value_&lang;(int)0&rang;::encode(const uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::param::NumericValue_&lang;(int)0&rang;::encode(const uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[349]"></a>uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZN6uavcan9equipment8actuator8Command_ILi0EE6decodeERS3_RNS_11ScalarCodecENS_25TailArrayOptimizationModeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::equipment::actuator::Command_&lang;(int)0&rang;::decode(uavcan::equipment::actuator::Command_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&) &rArr; uavcan::ScalarCodec::decodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::read(unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int uavcan::ScalarCodec::decode&lang;(unsigned)16, unsigned short&rang;(T2&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::decode(unsigned char&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IEEE754Converter::halfToNativeIeee(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>

<P><STRONG><a name="[7d]"></a>uavcan::equipment::actuator::Command_&lang;(int)0&rang;::Command_()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan9equipment8actuator8Command_ILi0EEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::decodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(t._ZN6uavcan17GenericSubscriberINS_9equipment8actuator13ArrayCommand_ILi0EEES4_NS_16TransferListenerEE22handleIncomingTransferERNS_16IncomingTransferE)
</UL>
<P><STRONG><a name="[3eb]"></a>uavcan::equipment::actuator::Command_&lang;(int)0&rang;::Command___sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZN6uavcan9equipment8actuator8Command_ILi0EEC1Ev), UNUSED)

<P><STRONG><a name="[22d]"></a>uavcan::DurationBase&lang;uavcan::MonotonicDuration&rang;::operator &rang;(const uavcan::MonotonicDuration&) const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_transfer_receiver.o(t._ZNK6uavcan12DurationBaseINS_17MonotonicDurationEEgtERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[1b2]"></a>uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;::operator bool() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIP13scu_libuavcanMS1_FvRKNS_9equipment8actuator13ArrayCommand_ILi0EEEEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Subscriber&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;, uavcan::MethodBinder&lang;scu_libuavcan*, void(scu_libuavcan::*)(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[305]"></a>uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;::operator bool() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPKNS_20RestartRequestServerEMS1_KFvRKNS_21ReceivedDataStructureINS_8protocol12RestartNode_8Request_ILi0EEEEERNS6_9Response_ILi0EEEEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[30c]"></a>uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;::operator bool() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPKNS_22TransportStatsProviderEMS1_KFvRKNS_8protocol18GetTransportStats_8Request_ILi0EEERNS5_9Response_ILi0EEEEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Node&lang;(unsigned)25600&rang;::start(uavcan::TransferPriority)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetTransportStats_, uavcan::MethodBinder&lang;const uavcan::TransportStatsProvider*, void(uavcan::TransportStatsProvider::*)(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[1f3]"></a>uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPNS_11ParamServerEMS1_FvRKNS_8protocol5param14ExecuteOpcode_8Request_ILi0EEERNS5_9Response_ILi0EEEEEcvbEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 uavcan::coerceOrFallback&lang;bool, uavcan::ParamServer*&rang;(const T2&, const T1&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::ExecuteOpcode_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::ExecuteOpcode_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::ExecuteOpcode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[1f0]"></a>uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPNS_11ParamServerEMS1_FvRKNS_8protocol5param7GetSet_8Request_ILi0EEERNS5_9Response_ILi0EEEEEcvbEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 uavcan::coerceOrFallback&lang;bool, uavcan::ParamServer*&rang;(const T2&, const T1&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::start(uavcan::IParamManager*)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::param::GetSet_, uavcan::MethodBinder&lang;uavcan::ParamServer*, void(uavcan::ParamServer::*)(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[23c]"></a>uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPNS_18NodeStatusProviderEMS1_FvRKNS_8protocol12GetNodeInfo_8Request_ILi0EEERNS4_9Response_ILi0EEEEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetNodeInfo_, uavcan::MethodBinder&lang;uavcan::NodeStatusProvider*, void(uavcan::NodeStatusProvider::*)(const uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetNodeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetNodeInfo_::Request_&lang;(int)0&rang;&rang;&)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::startAndPublish(uavcan::TransferPriority)
</UL>

<P><STRONG><a name="[1b8]"></a>uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;::operator bool() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPNS_19GlobalTimeSyncSlaveEMS1_FvRKNS_21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEEEEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan_Init(int)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Subscriber&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;, uavcan::MethodBinder&lang;uavcan::GlobalTimeSyncSlave*, void(uavcan::GlobalTimeSyncSlave::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[25a]"></a>uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;::operator bool() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan12MethodBinderIPNS_20DataTypeInfoProviderEMS1_FvRKNS_8protocol16GetDataTypeInfo_8Request_ILi0EEERNS4_9Response_ILi0EEEEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DataTypeInfoProvider::start()
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::GetDataTypeInfo_, uavcan::MethodBinder&lang;uavcan::DataTypeInfoProvider*, void(uavcan::DataTypeInfoProvider::*)(const uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetDataTypeInfo_::Response_&lang;(int)0&rang;&)&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::GetDataTypeInfo_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[a9]"></a>uavcan::PoolAllocator&lang;(unsigned)25600, (unsigned char)64, char&rang;::getBlockCapacity() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan13PoolAllocatorILj25600ELh64EcE16getBlockCapacityEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan13PoolAllocatorILj25600ELh64EcEE)
</UL>
<P><STRONG><a name="[297]"></a>uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uc_can_io.o(t._ZNK6uavcan15LazyConstructorINS_10CanTxQueueEEptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = uavcan::LazyConstructor&lang;uavcan::CanTxQueue&rang;::operator -&rang;() const &rArr; uavcan::handleFatalError(const char*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::makePendingTxMask() const
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::getIfacePerfCounters(unsigned char) const
</UL>

<P><STRONG><a name="[340]"></a>uavcan::DynamicArrayBase&lang;(unsigned)128&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj128EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::at(unsigned char)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::push_back(const unsigned char&)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)128&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[34c]"></a>uavcan::DynamicArrayBase&lang;(unsigned)15&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj15EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::operator [](unsigned char) const
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::at(unsigned char)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::push_back(const uavcan::equipment::actuator::Command_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[35b]"></a>uavcan::DynamicArrayBase&lang;(unsigned)255&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uc_node_status_provider.o(t._ZNK6uavcan16DynamicArrayBaseILj255EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::at(unsigned char) const
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[286]"></a>uavcan::DynamicArrayBase&lang;(unsigned)31&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj31EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::log(unsigned char, const char*, const char*)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)31&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2a3]"></a>uavcan::DynamicArrayBase&lang;(unsigned)3&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj3EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransportStatsProvider::handleGetTransportStats(const uavcan::protocol::GetTransportStats_::Request_&lang;(int)0&rang;&, uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&) const
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)0&rang;) const
</UL>

<P><STRONG><a name="[343]"></a>uavcan::DynamicArrayBase&lang;(unsigned)80&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj80EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::at(unsigned char)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::push_back(const unsigned char&)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[287]"></a>uavcan::DynamicArrayBase&lang;(unsigned)90&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj90EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Logger::log(unsigned char, const char*, const char*)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)90&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[348]"></a>uavcan::DynamicArrayBase&lang;(unsigned)92&rang;::validateRange(unsigned char) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan16DynamicArrayBaseILj92EE13validateRangeEh))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator =(const char*)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::at(unsigned char)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::push_back(const unsigned char&)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::encode(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[2a2]"></a>uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;::getSrcNodeID() const</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZNK6uavcan21ReceivedDataStructureINS_8protocol12RestartNode_8Request_ILi0EEEE12getSrcNodeIDEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;::getSrcNodeID() const
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::RestartRequestServer::handleRestartNode(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ServiceServer&lang;uavcan::protocol::RestartNode_, uavcan::MethodBinder&lang;const uavcan::RestartRequestServer*, void(uavcan::RestartRequestServer::*)(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&, uavcan::protocol::RestartNode_::Response_&lang;(int)0&rang;&) const&rang;&rang;::handleReceivedDataStruct(uavcan::ReceivedDataStructure&lang;uavcan::protocol::RestartNode_::Request_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[24d]"></a>uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getSrcNodeID() const</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZNK6uavcan21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEE12getSrcNodeIDEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getSrcNodeID() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[24f]"></a>uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getIfaceIndex() const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEE13getIfaceIndexEv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[251]"></a>uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZNK6uavcan21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEE13getTransferIDEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getTransferID() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[24c]"></a>uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;::getMonotonicTimestamp() const</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan21ReceivedDataStructureINS_8protocol15GlobalTimeSync_ILi0EEEE21getMonotonicTimestampEv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::updateFromMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalTimeSyncSlave::processMsg(const uavcan::ReceivedDataStructure&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;&)
</UL>

<P><STRONG><a name="[334]"></a>uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::KVPair::match(const uavcan::TransferBufferManagerKey&) const</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uc_transfer_listener.o(t._ZNK6uavcan3MapINS_24TransferBufferManagerKeyENS_16TransferReceiverEE6KVPair5matchERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::findKey(const uavcan::TransferBufferManagerKey&)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::compact()
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::TransferListener::TimedOutReceiverPredicate&rang;(T1)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::TransferBufferManagerKey, uavcan::TransferReceiver&rang;::YesPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[2a5]"></a>uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZNK6uavcan3MapINS_27OutgoingTransferRegistryKeyENS_24OutgoingTransferRegistry5ValueEE6KVPair5matchERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::KVPair::match(const uavcan::OutgoingTransferRegistryKey&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeID::operator ==(uavcan::NodeID) const
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::OutgoingTransferRegistry::exists(uavcan::DataTypeID, uavcan::TransferType) const
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::findKey(const uavcan::OutgoingTransferRegistryKey&)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::compact()
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::OutgoingTransferRegistry::DeadlineExpiredPredicate&rang;(T1)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::removeAllWhere&lang;uavcan::Map&lang;uavcan::OutgoingTransferRegistryKey, uavcan::OutgoingTransferRegistry::Value&rang;::YesPredicate&rang;(T1)
</UL>

<P><STRONG><a name="[e6]"></a>uavcan::Node&lang;(unsigned)25600&rang;::getScheduler() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan4NodeILj25600EE12getSchedulerEv))
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.constdata__ZTVN6uavcan4NodeILj25600EEE)
</UL>
<P><STRONG><a name="[34f]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) const</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scu_libuavcan.o(t._ZNK6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj255EE10encodeImplERNS_11ScalarCodecENS_25TailArrayOptimizationModeENS_11BooleanTypeILb1EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)1&rang;) const &rArr; uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned char, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::encode(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[246]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;::empty() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uc_node_status_provider.o(t._ZNK6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj80EE5emptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::isNodeInfoInitialized() const
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setName(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)80&rang;&)
</UL>

<P><STRONG><a name="[1ef]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::empty() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scu_libuavcan.o(t._ZNK6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EE5emptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ParamServer::handleGetSet(const uavcan::protocol::param::GetSet_::Request_&lang;(int)0&rang;&, uavcan::protocol::param::GetSet_::Response_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[1c6]"></a>uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scuparammanager.o(t._ZNK6uavcan5ArrayINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj92EEeqEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;::operator ==(const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamDefaultMaxMin(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&, uavcan::protocol::param::NumericValue_&lang;(int)0&rang;&) const
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::readParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, uavcan::protocol::param::Value_&lang;(int)0&rang;&) const
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScuParamManager::assignParamValue(const uavcan::Array&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)92&rang;&, const uavcan::protocol::param::Value_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[350]"></a>uavcan::Array&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)0&rang;) const</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, scu_libuavcan.o(t._ZNK6uavcan5ArrayINS_8protocol14CANIfaceStats_ILi0EEELNS_9ArrayModeE1ELj3EE10encodeImplERNS_11ScalarCodecENS_25TailArrayOptimizationModeENS_11BooleanTypeILb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = uavcan::Array&lang;uavcan::protocol::CANIfaceStats_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)3&rang;::encodeImpl(uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode, uavcan::BooleanType&lang;(bool)0&rang;) const &rArr; uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode) &rArr; uavcan::ScalarCodec::encodeBytesImpl(unsigned char*, unsigned) &rArr; uavcan::BitStream::write(const unsigned char*, unsigned) &rArr; uavcan::bitarrayCopy(const unsigned char*, unsigned, unsigned, unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::IntegerSpec&lang;(unsigned)48, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;::encode(unsigned long long, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)3&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;::encode(const uavcan::protocol::GetTransportStats_::Response_&lang;(int)0&rang;&, uavcan::ScalarCodec&, uavcan::TailArrayOptimizationMode)
</UL>

<P><STRONG><a name="[220]"></a>uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::isZero() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uc_transfer_receiver.o(t._ZNK6uavcan8TimeBaseINS_13MonotonicTimeENS_17MonotonicDurationEE6isZeroEv))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::updateTransferTimings()
</UL>

<P><STRONG><a name="[202]"></a>uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator &rang;=(const uavcan::MonotonicTime&) const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_can_io.o(t._ZNK6uavcan8TimeBaseINS_13MonotonicTimeENS_17MonotonicDurationEEgeERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::receive(uavcan::CanRxFrame&, uavcan::MonotonicTime, unsigned short&)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::CanIOManager::send(const uavcan::CanFrame&, uavcan::MonotonicTime, uavcan::MonotonicTime, unsigned char, uavcan::CanTxQueue::Qos, unsigned short)
</UL>

<P><STRONG><a name="[228]"></a>uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator &lang;(const uavcan::MonotonicTime&) const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uc_transfer_receiver.o(t._ZNK6uavcan8TimeBaseINS_13MonotonicTimeENS_17MonotonicDurationEEltERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
</UL>

<P><STRONG><a name="[221]"></a>uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, uc_transfer_receiver.o(t._ZNK6uavcan8TimeBaseINS_13MonotonicTimeENS_17MonotonicDurationEEmiERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator -(const uavcan::MonotonicTime&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::isTimedOut(uavcan::MonotonicTime) const
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::addFrame(const uavcan::RxFrame&, uavcan::TransferBufferAccessor&)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferReceiver::updateTransferTimings()
</UL>

<P><STRONG><a name="[1bd]"></a>uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, uc_transfer_sender.o(t._ZNK6uavcan8TimeBaseINS_13MonotonicTimeENS_17MonotonicDurationEEplERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uavcan::TimeBase&lang;uavcan::MonotonicTime, uavcan::MonotonicDuration&rang;::operator +(const uavcan::MonotonicDuration&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::spin(unsigned)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TimerBase::handleDeadline(uavcan::MonotonicTime)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GenericPublisherBase::getTxDeadline() const
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::TransferSender::send(const unsigned char*, unsigned, uavcan::MonotonicTime, uavcan::MonotonicTime, uavcan::TransferType, uavcan::NodeID) const
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::computeDispatcherSpinDeadline(uavcan::MonotonicTime) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::Scheduler::pollCleanup(uavcan::MonotonicTime, unsigned)
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DeadlineHandler::startWithDelay(uavcan::MonotonicDuration)
</UL>

<P><STRONG><a name="[240]"></a>uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, uc_node_status_provider.o(t._ZNK6uavcan8protocol16HardwareVersion_ILi0EEeqERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const &rArr; uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::at(unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::at(unsigned char) const
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)0, (unsigned)16&rang;::at(unsigned char) const
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)255&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::NodeStatusProvider::setHardwareVersion(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[359]"></a>uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)0, (unsigned)16&rang;::at(unsigned char) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uc_node_status_provider.o(t._ZNK6uavcan9ArrayImplINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE0ELj16EE2atEh))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[35a]"></a>uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::at(unsigned char) const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uc_node_status_provider.o(t._ZNK6uavcan9ArrayImplINS_11IntegerSpecILj8ELNS_10SignednessE0ELNS_8CastModeE0EEELNS_9ArrayModeE1ELj255EE2atEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ArrayImpl&lang;uavcan::IntegerSpec&lang;(unsigned)8, (uavcan::Signedness)0, (uavcan::CastMode)0&rang;, (uavcan::ArrayMode)1, (unsigned)255&rang;::at(unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)255&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::protocol::HardwareVersion_&lang;(int)0&rang;::operator ==(const uavcan::protocol::HardwareVersion_&lang;(int)0&rang;&) const
</UL>

<P><STRONG><a name="[1a7]"></a>uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::operator [](unsigned char) const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scu_libuavcan.o(t._ZNK6uavcan9ArrayImplINS_9equipment8actuator8Command_ILi0EEELNS_9ArrayModeE1ELj15EEixEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uavcan::ArrayImpl&lang;uavcan::equipment::actuator::Command_&lang;(int)0&rang;, (uavcan::ArrayMode)1, (unsigned)15&rang;::operator [](unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DynamicArrayBase&lang;(unsigned)15&rang;::validateRange(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::motor_ref_callback(const uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&)
</UL>

<P><STRONG><a name="[3ec]"></a>__aeabi_ul2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[3ed]"></a>_ll_uto_f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[190]"></a>__aeabi_l2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[3ee]"></a>_ll_sto_f</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[fb]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[3ef]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[3f0]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2cb]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2cc]"></a>prvCopyDataToQueue</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[2d2]"></a>prvIsQueueEmpty</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2d3]"></a>prvUnlockQueue</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2d7]"></a>prvHeapInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[2d8]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[2c1]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[2c5]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvAddNewTaskToReadyList
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[2c7]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[2ca]"></a>prvDeleteTCB</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[79]"></a>prvIdleTask</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[2cf]"></a>prvInitialiseNewTask</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[2ec]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[78]"></a>prvTaskExitError</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[2c0]"></a>makeFreeRtosPriority</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cmsis_os.o(i.makeFreeRtosPriority))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
</UL>

<P><STRONG><a name="[12f]"></a>FLASH_Program_Byte</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.FLASH_Program_Byte))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[12e]"></a>FLASH_Program_DoubleWord</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_flash.o(i.FLASH_Program_DoubleWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[130]"></a>FLASH_Program_HalfWord</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.FLASH_Program_HalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[131]"></a>FLASH_Program_Word</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.FLASH_Program_Word))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[12c]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[15c]"></a>UART_SetConfig</STRONG> (Thumb, 676 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[144]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[147]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[151]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[153]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[154]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[145]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[146]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[13c]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2e1]"></a>GetSector</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, flash.o(i.GetSector))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeParams2Flash
</UL>

<P><STRONG><a name="[e8]"></a>__sti___12_freertos_cpp_e87d2b16</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, freertos.o(i.__sti___12_freertos_cpp_e87d2b16))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___12_freertos_cpp_e87d2b16 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.init_array)
</UL>
<P><STRONG><a name="[e9]"></a>__sti___8_main_cpp_scu_can1</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, main.o(i.__sti___8_main_cpp_scu_can1))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___8_main_cpp_scu_can1 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_libuavcan::scu_libuavcan()
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[ea]"></a>__sti___17_scu_libuavcan_cpp_a5b52e7e</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, scu_libuavcan.o(i.__sti___17_scu_libuavcan_cpp_a5b52e7e))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___17_scu_libuavcan_cpp_a5b52e7e &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::equipment::actuator::ArrayCommand_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GlobalTimeSync_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcan.o(.init_array)
</UL>
<P><STRONG><a name="[eb]"></a>__sti___22_scu_libuavcanSTM32_cpp_be63688e</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, scu_libuavcanstm32.o(i.__sti___22_scu_libuavcanSTM32_cpp_be63688e))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___22_scu_libuavcanSTM32_cpp_be63688e &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scu_libuavcanstm32.o(.init_array)
</UL>
<P><STRONG><a name="[ec]"></a>__sti___19_ScuParamManager_cpp_e368b1fe</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, scuparammanager.o(i.__sti___19_ScuParamManager_cpp_e368b1fe))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___19_ScuParamManager_cpp_e368b1fe &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID) &rArr; uavcan::protocol::param::Value_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::protocol::param::Empty_&lang;(int)0&rang;::extendDataTypeSignature(uavcan::DataTypeSignature&) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::GetSet_&rang;(uavcan::DataTypeID)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::param::ExecuteOpcode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scuparammanager.o(.init_array)
</UL>
<P><STRONG><a name="[ed]"></a>__sti___28_ScuRestartRequestHandler_cpp_1d0ead51</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, scurestartrequesthandler.o(i.__sti___28_ScuRestartRequestHandler_cpp_1d0ead51))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___28_ScuRestartRequestHandler_cpp_1d0ead51 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scurestartrequesthandler.o(.init_array)
</UL>
<P><STRONG><a name="[ee]"></a>__sti___33_uc_outgoing_transfer_registry_cpp_e869a750</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uc_outgoing_transfer_registry.o(i.__sti___33_uc_outgoing_transfer_registry_cpp_e869a750))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __sti___33_uc_outgoing_transfer_registry_cpp_e869a750 &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_outgoing_transfer_registry.o(.init_array)
</UL>
<P><STRONG><a name="[ef]"></a>__sti___15_uc_transfer_cpp_49afa4ea</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uc_transfer.o(i.__sti___15_uc_transfer_cpp_49afa4ea))
<BR>[Address Reference Count : 1]<UL><LI> uc_transfer.o(.init_array)
</UL>
<P><STRONG><a name="[f0]"></a>__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uc_dynamic_node_id_client.o(i.__sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __sti___29_uc_dynamic_node_id_client_cpp_fa4b5bf3 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID) &rArr; uavcan::GlobalDataTypeRegistry::remove(uavcan::GlobalDataTypeRegistry::Entry*) &rArr; uavcan::DataTypeDescriptor::match(uavcan::DataTypeKind, const char*) const &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::dynamic_node_id::Allocation_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_dynamic_node_id_client.o(.init_array)
</UL>
<P><STRONG><a name="[f1]"></a>__sti___27_uc_node_status_provider_cpp_54b78f91</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, uc_node_status_provider.o(i.__sti___27_uc_node_status_provider_cpp_54b78f91))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___27_uc_node_status_provider_cpp_54b78f91 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_node_status_provider.o(.init_array)
</UL>
<P><STRONG><a name="[18a]"></a>uavcan_stm32::nvicEnableVector(IRQn_Type, unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uc_stm32_can.o(i._ZN12uavcan_stm3216nvicEnableVectorE9IRQn_Typeh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan_stm32::nvicEnableVector(IRQn_Type, unsigned char) &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanDriver::initOnce()
</UL>

<P><STRONG><a name="[127]"></a>uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uc_stm32_can.o(i._ZN12uavcan_stm3240_GLOBAL__N__16_uc_stm32_can_cpp_7d6b331717handleRxInterruptEhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = uavcan_stm32::&lang;unnamed namespace _16_uc_stm32_can_cpp_7d6b3317&rang;::handleRxInterrupt(unsigned char, unsigned char) &rArr; uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long) &rArr; uavcan_stm32::BusEvent::signalFromInterrupt() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getUtcUSecFromCanInterrupt()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::handleRxInterrupt(unsigned char, unsigned long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX1_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[199]"></a>uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)::BsPair::BsPair(unsigned char, unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uc_stm32_can.o(i._ZZN12uavcan_stm328CanIface14computeTimingsEjRNS0_7TimingsEEN6BsPairC1Ehh))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::CanIface::computeTimings(unsigned, uavcan_stm32::CanIface::Timings&)
</UL>

<P><STRONG><a name="[f2]"></a>__sti___16_uc_stm32_can_cpp_7d6b3317</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, uc_stm32_can.o(i.__sti___16_uc_stm32_can_cpp_7d6b3317))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___16_uc_stm32_can_cpp_7d6b3317 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_can.o(.init_array)
</UL>
<P><STRONG><a name="[18f]"></a>uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration)</STRONG> (Thumb, 302 bytes, Stack size 56 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock13updateRatePIDEN6uavcan11UtcDurationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uavcan_stm32::clock::updateRatePID(uavcan::UtcDuration) &rArr; uavcan_stm32::clock::getMonotonic()
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getMonotonic()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& uavcan::min&lang;float&rang;(const T1&, const T1&)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& uavcan::max&lang;float&rang;(const T1&, const T1&)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::adjustUtc(uavcan::UtcDuration)
</UL>

<P><STRONG><a name="[193]"></a>uavcan_stm32::clock::sampleUtcFromCriticalSection()</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, uc_stm32_clock.o(i._ZN12uavcan_stm325clock28sampleUtcFromCriticalSectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uavcan_stm32::clock::sampleUtcFromCriticalSection()
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan_stm32::clock::getUtcUSecFromCanInterrupt()
</UL>

<P><STRONG><a name="[f3]"></a>__sti___18_uc_stm32_clock_cpp_87095aac</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, uc_stm32_clock.o(i.__sti___18_uc_stm32_clock_cpp_87095aac))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___18_uc_stm32_clock_cpp_87095aac &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::DurationBase&lang;uavcan::UtcDuration&rang;::fromMSec(long long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_clock.o(.init_array)
</UL>
<P><STRONG><a name="[f4]"></a>__sti___19_uc_stm32_thread_cpp_d810ad60</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, uc_stm32_thread.o(i.__sti___19_uc_stm32_thread_cpp_d810ad60))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __sti___19_uc_stm32_thread_cpp_d810ad60 &rArr; uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID) &rArr; uavcan::DataTypeSignature::extend(uavcan::DataTypeSignature) &rArr; uavcan::DataTypeSignature::mixin64(unsigned long long) &rArr; uavcan::DataTypeSignatureCRC::add(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::debug::LogMessage_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetTransportStats_&rang;(uavcan::DataTypeID)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetDataTypeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::RestartNode_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::GetNodeInfo_&rang;(uavcan::DataTypeID)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::RegistrationResult uavcan::GlobalDataTypeRegistry::registerDataType&lang;uavcan::protocol::NodeStatus_&lang;(int)0&rang;&rang;(uavcan::DataTypeID)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::GlobalDataTypeRegistry::instance()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uavcan::handleFatalError(const char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uc_stm32_thread.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
